@import url("https://fonts.googleapis.com/css?family=Anton");@import url("https://fonts.googleapis.com/css?family=Work+Sans:400");*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}html{font-size:62.5%}body{font:300 16px Work Sans,sans-serif}h1,h2,h3,h4,h5{font-family:Anton,sans-serif;letter-spacing:0}a{text-decoration:none}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block;box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}@keyframes a{0%{opacity:0}to{opacity:1}}@keyframes b{0%{opacity:1}to{opacity:0}}@keyframes c{0%{transform:translateX(20vw);opacity:0}to{transform:translateX(0);opacity:1}}@keyframes d{0%{width:120vmax;height:120vmax}to{width:50vw;height:50vw}}@keyframes e{0%{width:50vw;height:50vw}to{width:120vmax;height:120vmax}}.flex-both-align{-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}.flex-both-align,.flex-row{display:-ms-flexbox;display:flex}.flex-row{-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-line-pack:center;align-content:center;-ms-flex-align:start;align-items:flex-start}.home .arrow,.main-section .circle,.vertical-align{position:relative;top:50%;transform:translateY(-50%)}.horizontal-align{position:relative;left:50%;transform:translateX(-50%)}.align-both{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%)}nav{position:fixed;top:20px;left:20px;padding:24px;width:48px;height:0;transform:translateZ(0);transition:background-color .4s ease-out;z-index:1}.is-open nav{height:calc(100% - 40px);width:calc(100% - 40px);background-color:rgba(55,74,103,.85);z-index:3}nav ul{position:absolute;top:0;left:24px;font-size:30px;text-transform:capitalize;color:#fff;transform-origin:0 0;transform:scale(.1);transition:transform .2s ease-out;z-index:2}nav ul:after{content:"";display:table;clear:both}nav ul li{display:none;clear:both;float:left;margin:0 0 48px;padding:0 60px;background-color:#fff;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:background-color 0s ease-out .2s,margin .2s ease-out,padding .2s ease-out,opacity .2s ease-out}nav ul li:after{content:"";position:absolute;bottom:5px;left:0;height:0;width:0;background-color:#fff;transition:width .2s ease-out}nav ul li:nth-child(n+3){display:block}nav ul li:first-child,nav ul li:nth-child(2),nav ul li:nth-child(3),nav ul li:nth-child(4),nav ul li:nth-child(5){animation:bounce-out .2s ease-out}nav ul li:hover:after{height:4px;width:100%}nav ul li a{color:#fff}.is-open nav ul{transform:translateY(30px) scale(1)}.is-open nav ul li{display:block;padding:12px 0;margin:0;background-color:transparent;transform:scale(.6);transition:background-color 0s ease-out,margin .2s ease-out,padding .2s ease-out,opacity .2s ease-out}.is-open nav ul li:first-child{animation:f 1s .04s ease-out forwards}.is-open nav ul li:nth-child(2){animation:f 1s .08s ease-out forwards}.is-open nav ul li:nth-child(3){animation:f 1s .12s ease-out forwards}.is-open nav ul li:nth-child(4){animation:f 1s .16s ease-out forwards}.is-open nav ul li:nth-child(5){animation:f 1s .2s ease-out forwards}.nav{position:absolute;top:24px;left:24px;width:30px;height:32px;background-color:transparent;border:none;outline:none;cursor:pointer;opacity:0;transition:opacity .2s ease-out .1s,transform .4s ease-out .1s;z-index:3}.nav:after,.nav:before{content:"";position:absolute;top:0;right:0;bottom:0;left:0;margin:auto;width:3px;height:100%;background-color:#fff}.nav:before{transform:rotate(45deg)}.nav:after{transform:rotate(-45deg)}.is-open .nav{opacity:1;transform:rotate(90deg);transition:opacity .2s ease-out .1s,transform .4s ease-out .1s}body:not(.is-open) .nav:hover+ul li:nth-child(3){padding:0 110px;transition-delay:0s}body:not(.is-open) .nav:hover+ul li:nth-child(4){padding:0 110px;transition-delay:.06667s}body:not(.is-open) .nav:hover+ul li:nth-child(5){padding:0 110px;transition-delay:.13333s}body:not(.is-open) .nav:hover+ul li:nth-child(6){padding:0 110px;transition-delay:.2s}@keyframes f{0%{transform:scale(.8)}20%{transform:scale(1.1)}40%{transform:scale(.9)}60%{transform:scale(1.05)}80%{transform:scale(.96)}to{transform:scale(1)}}.main-section{position:relative;height:100vh;overflow:hidden;background-color:#374a67;transition:all 1s cubic-bezier(1,0,.5,1);border:20px solid #fff}.main-section.intro .copy{top:20vw}.main-section .circle{right:-12.5vw;width:120vmax;height:120vmax;border-radius:100%;margin:auto;background-color:#efd0ca;transition:all 1s cubic-bezier(1,0,.5,1)}.main-section .active .circle,.main-section>.circle{animation:d 1s cubic-bezier(1,0,.5,1) forwards .66667s}.main-section .slick-slide:not(.active) .circle{width:50vw;height:50vw}.main-section .copy{position:absolute;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:flex-start;-ms-flex-pack:center;justify-content:center;width:100%;top:10vw;right:25vw}.main-section .copy h1,.main-section .copy h2{display:inline-table;position:relative;margin:0;opacity:0;color:#fff;font-family:Anton,sans-serif;text-shadow:-10px 15px 25px rgba(0,0,0,.3);line-height:1;animation:a .5s cubic-bezier(1,0,.5,1) forwards .5s}.main-section .copy h1{font-size:13vw}.main-section .copy h2{font-size:5.1vw}.main-section .copy a{margin-top:30px;display:block}.main-section.active .btn,.main-section.active .copy,.main-section.active .titles{opacity:0;animation:c .5s cubic-bezier(1,0,.5,1) forwards}.main-section.landing-animation .btn,.main-section.landing-animation .copy,.main-section.landing-animation .titles{animation-delay:1.5s}.transition-out section:not(.projects) .circle{animation:e 1s cubic-bezier(1,0,.5,1) forwards}.transition-out section.projects .slick-active .circle{background-color:#efd0ca;animation:e 1s cubic-bezier(1,0,.5,1) forwards}.transition-out .main-section .btn,.transition-out .main-section .copy,.transition-out .main-section .titles{animation:b .5s cubic-bezier(1,0,.5,1) forwards}.btn{box-sizing:border-box;outline:none;line-height:80px;position:relative;display:block;overflow:hidden;max-width:250px;width:100%;height:80px;margin-top:30px;text-align:center;text-transform:uppercase;background-color:transparent;border:1px solid #9da6b9;color:#9da6b9;transition:color .4s ease-in-out}.btn span{position:absolute;display:block;width:0;height:0;border-radius:50%;background-color:#9da6b9;transition:width .4s ease-in-out,height .4s ease-in-out;transform:translate(-50%,-50%);z-index:-1}.btn:hover{color:#fff}.btn:hover span{width:225%;height:562.5px}.btn:active{background-color:#9da6b9}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}.home .circle{position:relative}.home .circle .me{opacity:0;position:absolute;width:100%;right:-1px;bottom:-1px;animation:a .2s ease-in forwards 1.5s}.home .transition-out .circle .me{animation:b .2s ease-in forwards}.scrollify-arrows{position:fixed;bottom:10px;left:50px}.scrollify-arrows div{width:5vw;cursor:pointer;margin-bottom:20px}.scrollify-arrows div.arrow-down{transform:rotate(180deg)}.scrollify-arrows div.disabled{opacity:.3;pointer-events:none}.scrollify-arrows div svg{width:100%;pointer-events:none}.scrollify-arrows div svg path{pointer-events:none}.pagination{position:fixed;top:10px;right:40px;list-style:none}.pagination li{margin:20px 0}.pagination li a{color:#fff;transition:all .2s ease-in}.pagination li a.active{color:#64718c}.home .carousel{position:absolute;width:100%;height:100%;left:0;top:0}.home .carousel .slide{position:relative;width:100vw;height:100vh}.home .carousel .titles{position:absolute;top:10vw;left:-25vw;color:#fff;text-shadow:-10px 15px 25px rgba(0,0,0,.3)}.home .carousel .titles h2,.home .carousel .titles h4{margin:0;line-height:1}.home .carousel .titles h2{font-size:10vw}.home .carousel .titles h4{font-size:5vw}.home .carousel .slick-slide{outline:0}.home .arrow{position:absolute;width:5vw;cursor:pointer;z-index:2}.home .arrow.arrow-prev{left:5vmin;transform:rotate(180deg);top:calc(50% - 2.5vw)}.home .arrow.arrow-next{right:5vmin}.home .arrow svg{width:100%}.home .arrow svg,.home .arrow svg path{pointer-events:none}.home .main-section.projects .circle{background-color:#64718c}.home .main-section.projects .devices{position:relative;display:-ms-flexbox;display:flex;height:100%}.home .main-section.projects .devices img{position:absolute}.home .main-section.projects .devices .desktop{width:80%;top:20%;left:10%}.home .main-section.projects .devices .laptop{width:60%;left:-10%;bottom:10%}.home .main-section.projects .devices .mobile{width:20%;right:0;bottom:15%}.home .transition-out .circle .devices{transition:opacity .2s ease-out;opacity:0}.slick-slider{box-sizing:border-box;-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-ms-touch-action:pan-y;touch-action:pan-y;-webkit-tap-highlight-color:transparent}.slick-list,.slick-slider{position:relative;display:block}.slick-list{overflow:hidden;margin:0;padding:0}.slick-list:focus{outline:none}.slick-list.dragging{cursor:pointer;cursor:hand}.slick-slider .slick-list,.slick-slider .slick-track{transform:translateZ(0)}.slick-track{position:relative;left:0;top:0;display:block;margin-left:auto;margin-right:auto}.slick-track:after,.slick-track:before{content:"";display:table}.slick-track:after{clear:both}.slick-loading .slick-track{visibility:hidden}.slick-slide{float:left;height:100%;min-height:1px;display:none}[dir=rtl] .slick-slide{float:right}.slick-slide img{display:block}.slick-slide.slick-loading img{display:none}.slick-slide.dragging img{pointer-events:none}.slick-initialized .slick-slide{display:block}.slick-loading .slick-slide{visibility:hidden}.slick-vertical .slick-slide{display:block;height:auto;border:1px solid transparent}.slick-arrow.slick-hidden{display:none}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
