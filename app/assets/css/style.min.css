@import url("https://fonts.googleapis.com/css?family=Anton");@import url("https://fonts.googleapis.com/css?family=Work+Sans:400");*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}html{font-size:62.5%}body{font:300 16px Work Sans,sans-serif}h1,h2,h3,h4,h5{font-family:Anton,sans-serif;letter-spacing:0}a{text-decoration:none}.barba-container{width:100vw;overflow:hidden}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block;box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}@keyframes a{0%{opacity:0}to{opacity:1}}@keyframes b{0%{opacity:1}to{opacity:0}}@keyframes c{0%{transform:translateX(20vw);opacity:0}to{transform:translateX(0);opacity:1}}@keyframes d{0%{width:120vmax;height:120vmax}to{width:50vw;height:50vw}}@keyframes e{0%{width:50vw;height:50vw}to{width:120vmax;height:120vmax}}.flex-both-align{-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}.flex-both-align,.flex-row{display:-ms-flexbox;display:flex}.flex-row{-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-line-pack:center;align-content:center;-ms-flex-align:start;align-items:flex-start}.home .arrow,.main-section .circle,.vertical-align,body.projects section.main-section .details ul li:before{position:relative;top:50%;transform:translateY(-50%)}.horizontal-align,.scroll-section.contact .me{position:relative;left:50%;transform:translateX(-50%)}.align-both,body.about .intro .circle video,body.projects section.main-section .img-intro,nav ul li:before{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%)}nav{position:fixed;top:0;left:0;padding:20px;z-index:1}nav ul{list-style:none}@media (max-width:767px){nav ul{padding-left:5px}}nav ul li{position:relative;display:inline-block;margin:0 10px;line-height:1}@media (max-width:767px){nav ul li{margin:0 2.5px;font-size:14px}}nav ul li:before{content:"";position:absolute;width:30px;height:30px;border-radius:100%;background-color:#64718c;z-index:-1;opacity:0;transition:opacity .2s ease-in}nav ul li a{color:#fff}body.home nav ul li:first-of-type:before{opacity:1}body.projects nav ul li:nth-of-type(2):before{opacity:1;background-color:#374a67}body.about nav ul li:nth-of-type(3):before,body.contact nav ul li:nth-of-type(4):before{opacity:1}.main-section{position:relative;height:100vh;overflow:hidden;background-color:#374a67;transition:all 1s cubic-bezier(1,0,.5,1);border:20px solid #fff}.main-section .copy{position:absolute;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:flex-start;-ms-flex-pack:center;justify-content:center;left:12.5vw;top:10vw;height:50vw}.main-section .copy h1,.main-section .copy h2{display:inline-table;position:relative;margin:0;opacity:0;color:#fff;font-family:Anton,sans-serif;text-shadow:-10px 15px 25px rgba(0,0,0,.3);line-height:1;animation:a .5s cubic-bezier(1,0,.5,1) forwards .5s}.main-section .copy h1{font-size:13vw}.main-section .copy h2{font-size:5.1vw}.main-section .copy a{margin-top:30px;display:block}.main-section.active .copy,.main-section.active .titles{opacity:0;animation:c .5s cubic-bezier(1,0,.5,1) forwards}.main-section.landing-animation .copy,.main-section.landing-animation .titles{animation-delay:1.5s}.transition-out .circle .me{animation:b .2s ease-in forwards!important}.transition-out section:not(.projects) .circle{animation:e 1s cubic-bezier(1,0,.5,1) forwards}.transition-out section.projects .slick-active .circle{background-color:#efd0ca;animation:e 1s cubic-bezier(1,0,.5,1) forwards}.transition-out .main-section .btn,.transition-out .main-section .copy,.transition-out .main-section .titles{animation:b .5s cubic-bezier(1,0,.5,1) forwards}body:not(.home) .copy{opacity:0;animation:c .5s cubic-bezier(1,0,.5,1) forwards 1.5s}body.home .intro .copy{top:20vw}.btn{box-sizing:border-box;outline:none;line-height:80px;position:relative;display:block;overflow:hidden;max-width:250px;width:100%;height:80px;margin-top:30px;text-align:center;text-transform:uppercase;background-color:transparent;border:1px solid #9da6b9;color:#9da6b9;transition:color .4s ease-in-out}.btn span{position:absolute;display:block;width:0;height:0;border-radius:50%;background-color:#9da6b9;transition:width .4s ease-in-out,height .4s ease-in-out;transform:translate(-50%,-50%);z-index:-1}.btn:hover{color:#fff}.btn:hover span{width:225%;height:562.5px}.btn:active{background-color:#9da6b9}.home .circle{position:relative}.home .circle .me{opacity:1;position:absolute;width:100%;right:0;bottom:0;animation:b .2s ease-in forwards .5s}.home .intro .circle .me{right:-1px;bottom:-1px}.home .main-section.active .circle .me{opacity:0;animation:a .2s ease-in forwards .5s}.home .main-section.landing-animation .circle .me{opacity:0;animation-delay:1.5s}.main-section .circle{right:-12.5vw;width:120vmax;height:120vmax;border-radius:100%;margin:auto;background-color:#efd0ca;transition:all 1s cubic-bezier(1,0,.5,1)}.main-section .active .circle,.main-section>.circle{animation:d 1s cubic-bezier(1,0,.5,1) forwards .66667s}.main-section .slick-slide:not(.active) .circle{width:50vw;height:50vw}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}.scroll-section.contact .me{bottom:-1px;width:calc(100% + 5px);right:auto}.scrollify-arrows{position:fixed;bottom:10px;left:50px}.scrollify-arrows div{width:5vw;cursor:pointer;margin-bottom:20px}.scrollify-arrows div.arrow-down{transform:rotate(180deg)}.scrollify-arrows div.disabled{opacity:.3;pointer-events:none}.scrollify-arrows div svg{width:100%;pointer-events:none}.scrollify-arrows div svg path{pointer-events:none}.pagination{position:fixed;top:10px;right:40px;list-style:none}@media (max-width:767px){.pagination{top:30px;right:30px}}.pagination li{margin:20px 0}@media (max-width:767px){.pagination li{font-size:14px}}.pagination li a{color:#fff;transition:all .2s ease-in}.pagination li a.active{color:#64718c}.home .carousel{position:absolute;width:100%;height:100%;left:0;top:0}.home .carousel .slide{position:relative;width:100vw;height:100vh}.home .carousel .slide .titles>*{opacity:0;transform:translateX(20vw);transition:.5s}.home .carousel .slide.animate .titles>*{opacity:1;transform:translateX(0)}.home .carousel .titles{position:absolute;left:12.5vw;top:25vw;height:50vw;color:#fff;text-shadow:-10px 15px 25px rgba(0,0,0,.3)}.home .carousel .titles h2,.home .carousel .titles h4{margin:0;line-height:1}.home .carousel .titles h2{font-size:10vw}.home .carousel .titles h4{font-size:5vw}.home .carousel .slick-slide{outline:0}.home .arrow{position:absolute;width:5vw;cursor:pointer;z-index:2}.home .arrow.arrow-prev{left:5vmin;transform:rotate(180deg);top:calc(50% - 2.5vw)}.home .arrow.arrow-next{right:5vmin}.home .arrow svg{width:100%}.home .arrow svg,.home .arrow svg path{pointer-events:none}.home .main-section.projects .circle{background-color:#64718c}.home .main-section.projects .devices{position:relative;display:-ms-flexbox;display:flex;height:100%}.home .main-section.projects .devices img{position:absolute}.home .main-section.projects .devices .desktop{width:80%;top:20%;left:10%}.home .main-section.projects .devices .laptop{width:60%;left:-10%;bottom:10%}.home .main-section.projects .devices .mobile{width:20%;right:0;bottom:15%}.home .transition-out .circle .devices{transition:opacity .2s ease-out;opacity:0}body.about .intro .video-container{position:absolute;width:50vw;height:50vw;left:0;top:0;border-radius:100%;overflow:hidden;opacity:0;animation:a 1s forwards 1.5s;mix-blend-mode:darken}body.about .intro .circle video{position:absolute;width:100%}body.about .transition-out .intro .video-container{animation:b .5s forwards}body.projects section.main-section{background-color:#64718c;border-bottom:none}body.projects section.main-section .img-intro{width:83%;opacity:0;animation:a 1s forwards 1.5s}body.projects section.main-section .details{display:inline-table;position:relative;opacity:0;animation:a .5s cubic-bezier(1,0,.5,1) forwards .5s}body.projects section.main-section .details h3{position:relative;font-size:38px;margin:10px 0 0 10px;color:#253246}body.projects section.main-section .details ul{padding-left:0;list-style:none;width:20vw}body.projects section.main-section .details ul li{position:relative;color:#253246;font-size:20px;padding:5px 5px 5px 20px;display:inline-block}body.projects section.main-section .details ul li:before{content:"";position:absolute;width:10px;height:10px;background-color:#253246;border-radius:100%;left:5px}body.projects section.project{background-color:#64718c;border:20px solid #fff;border-top:none;padding:5vw}body.projects section.project>div{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:flex-start;width:80%;margin:auto}body.projects section.project>div .img{position:relative;width:95%;z-index:1}@media (min-width:768px){body.projects section.project>div .img{width:70%}}body.projects section.project>div .img img{width:100%;display:block}body.projects section.project>div .img:nth-of-type(2n){-ms-flex-item-align:end;align-self:flex-end}body.projects section.project>div .img:after{content:"";position:absolute;width:110%;height:100%;top:0;left:-10%;background-color:#efd0ca;transition:width .5s cubic-bezier(1,0,.5,1)}body.projects section.project>div .img:nth-of-type(2n):after{right:-10%;left:auto}body.projects section.project>div .img.in-viewport{transition:none}body.projects section.project>div .img.in-viewport:after{width:10%}body.projects .transition-out .main-section .img-intro{animation:b .5s forwards}.slick-slider{box-sizing:border-box;-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-ms-touch-action:pan-y;touch-action:pan-y;-webkit-tap-highlight-color:transparent}.slick-list,.slick-slider{position:relative;display:block}.slick-list{overflow:hidden;margin:0;padding:0}.slick-list:focus{outline:none}.slick-list.dragging{cursor:pointer;cursor:hand}.slick-slider .slick-list,.slick-slider .slick-track{transform:translateZ(0)}.slick-track{position:relative;left:0;top:0;display:block;margin-left:auto;margin-right:auto}.slick-track:after,.slick-track:before{content:"";display:table}.slick-track:after{clear:both}.slick-loading .slick-track{visibility:hidden}.slick-slide{float:left;height:100%;min-height:1px;display:none}[dir=rtl] .slick-slide{float:right}.slick-slide img{display:block}.slick-slide.slick-loading img{display:none}.slick-slide.dragging img{pointer-events:none}.slick-initialized .slick-slide{display:block}.slick-loading .slick-slide{visibility:hidden}.slick-vertical .slick-slide{display:block;height:auto;border:1px solid transparent}.slick-arrow.slick-hidden{display:none}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZXMvX3ZhcnMuc2NzcyIsIm1vZHVsZXMvX2RlZmF1bHRzLnNjc3MiLCJtb2R1bGVzL19ub3JtYWxpemUuc2NzcyIsInN0eWxlLmNzcyIsIm1vZHVsZXMvX2FuaW1hdGlvbnMuc2NzcyIsIm1peGlucy9fc25pcHBldHMuc2NzcyIsInBhcnRpYWxzL19uYXZpZ2F0aW9uLnNjc3MiLCJtaXhpbnMvX2JyZWFrcG9pbnRzLnNjc3MiLCJwYXJ0aWFscy9fbWFpbi1zZWN0aW9uLnNjc3MiLCJtaXhpbnMvX21peGlucy5zY3NzIiwibW9kdWxlcy9fYnV0dG9ucy5zY3NzIiwibW9kdWxlcy9fY2lyY2xlLnNjc3MiLCJtb2R1bGVzL19taXNjLnNjc3MiLCJwYWdlcy9ob21lL19zY3JvbGwtc2VjdGlvbnMuc2NzcyIsInBhZ2VzL2hvbWUvX2Nhcm91c2VsLnNjc3MiLCJwYWdlcy9hYm91dC9faW50cm8uc2NzcyIsInBhZ2VzL3Byb2plY3RzL19wcm9qZWN0LWRldGFpbC5zY3NzIiwidmVuZG9yL19leHRlcm5hbC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDZEQUFZLEFBQ1oscUVBQVksQUNEWixFQUNFLHNCQUF1QixBQUN2QiwyQkFBNEIsQUFDNUIsaUNBQW1DLENBQ3BDLEFBRUQsS0FDRSxlQUFpQixDQUNsQixBQUVELEtBQ0Usa0NERWlDLENDRGxDLEFBRUQsZUFLRSw2QkRQK0IsQUNRL0IsZ0JBQWtCLENBQ25CLEFBRUQsRUFDRSxvQkFBc0IsQ0FDdkIsQUFFRCxpQkFDRSxZQUFhLEFBQ2IsZUFBaUIsQ0FDbEI7O0FDOUJELDRFQUE0RSxBQU81RSxLQUNFLHVCQUF3QixBQUN4QiwwQkFBMkIsQUFDM0IsNkJBQStCLENBQ2hDLEFBTUQsS0FDRSxRQUFVLENBQ1gsQUFXRCxvRkFZRSxjQUFlLEFBQ2Ysc0JBQXVCLEFBQ3ZCLDJCQUE0QixBQUM1Qiw2QkFBK0IsQ0FDaEMsQUFNRCw0QkFJRSxvQkFBc0IsQ0FDdkIsQUFNRCxzQkFDRSxhQUFj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c0JBQXVCLEFBQ3ZCLHFCQUFzQixBQUN0QixpQkFBa0IsQUFDbEIsdUJBQXdCLEFBQ3hCLG1CQUFvQixBQUNwQix1Q0FBeUMsQ0FDMUMsQUFDRCwwQkFiRSxrQkFBbUIsQUFDbkIsYUFBZSxDQVlqQixBQWVDLFlBYkMsZ0JBQWlCLEFBRWpCLFNBQVUsQUFDVixTQUFXLENBVVosQUFmRCxrQkFRSSxZQUFjLENBQ2YsQUFUSCxxQkFZSSxlQUFnQixBQUNoQixXQUFhLENBQ2QsQUFFSCxxREFNRSx1QkFBc0IsQ0FDdkIsQUFFRCxhQUNFLGtCQUFtQixBQUNuQixPQUFRLEFBQ1IsTUFBTyxBQUNQLGNBQWUsQUFDZixpQkFBa0IsQUFDbEIsaUJBQW1CLENBZXBCLEFBckJELHVDQVVJLFdBQVksQUFDWixhQUFlLENBQ2hCLEFBWkgsbUJBZUksVUFBWSxDQUNiLEFBaEJILDRCQW1CSSxpQkFBbUIsQ0FDcEIsQUFFSCxhQUNFLFdBQVksQUFDWixZQUFhLEFBQ2IsZUFBZ0IsQUFXaEIsWUFBYyxDQW1CZixBZHM0QkMsdUJjbDZCRSxXQUFhLENBQ2QsQUFOSCxpQkFRSSxhQUFlLENBQ2hCLEFBVEgsK0JBV0ksWUFBYyxDQUNmLEFBWkgsMEJBaUJJLG1CQUFxQixDQUN0QixBQWxCSCxnQ0FxQkksYUFBZSxDQUNoQixBQXRCSCw0QkF5QkksaUJBQW1CLENBQ3BCLEFBMUJILDZCQTZCSSxjQUFlLEFBQ2YsWUFBYSxBQUNiLDRCQUE4QixDQUMvQixBQUVILDBCQUNFLFlBQWMsQ0FDZiIsImZpbGUiOiJzdHlsZS5taW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1BbnRvbicpO1xuQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1Xb3JrK1NhbnM6NDAwJyk7XG5cbiRncmF5LWJsdWU6ICM2NDcxOEM7XG4kZGFyay1ncmF5LWJsdWU6ICMzNzRBNjc7XG4kcGluazogI0VGRDBDQTtcblxuJGJhc2U6ICRkYXJrLWdyYXktYmx1ZTtcblxuJHdoaXRlOiAjZmZmO1xuJGJsYWNrOiAjMDAwO1xuXG4kaGVhZGVyLWZvbnQ6ICdBbnRvbicsIHNhbnMtc2VyaWY7XG4kYm9keS1mb250OiAnV29yayBTYW5zJywgc2Fucy1zZXJpZjtcblxuJGR1cmF0aW9uOiAxcztcbiRlYXNlOiBjdWJpYy1iZXppZXIoMSwgMCwgMC41LCAxKTtcbiIsIioge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBmb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XG59XG5cbmh0bWwge1xuICBmb250LXNpemU6IDYyLjUlO1xufVxuXG5ib2R5IHtcbiAgZm9udDogMzAwIDE2cHggJGJvZHktZm9udDtcbn1cblxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNXtcbiAgZm9udC1mYW1pbHk6ICRoZWFkZXItZm9udDtcbiAgbGV0dGVyLXNwYWNpbmc6IDA7XG59XG5cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5iYXJiYS1jb250YWluZXIge1xuICB3aWR0aDogMTAwdnc7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG4iLCIvKiEgbm9ybWFsaXplLmNzcyB2NC4xLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG5cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBkZWZhdWx0IGZvbnQgZmFtaWx5IGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBJRSBhbmQgaU9TLlxuICovXG5cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xufVxuXG4vKiBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUsIGFuZCBGaXJlZm94LlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cblxuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscywgLyogMSAqL1xuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbm1haW4sIC8qIDIgKi9cbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7IC8qIDEgKi9cbiAgZGlzcGxheTogYmxvY2s7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC1tb3otYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5cbmF1ZGlvLFxuY2FudmFzLFxucHJvZ3Jlc3MsXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBpT1MgNC03LlxuICovXG5cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG5cbnRlbXBsYXRlLCAvKiAxICovXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIExpbmtzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSBnYXBzIGluIGxpbmtzIHVuZGVybGluZSBpbiBpT1MgOCsgYW5kIFNhZmFyaSA4Ky5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0czsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgb3V0bGluZSBvbiBmb2N1c2VkIGxpbmtzIHdoZW4gdGhleSBhcmUgYWxzbyBhY3RpdmUgb3IgaG92ZXJlZFxuICogaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZS13aWR0aDogMDtcbn1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIEZpcmVmb3ggMzktLlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7IC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkOyAvKiAyICovXG59XG5cbi8qKlxuICogUHJldmVudCB0aGUgZHVwbGljYXRlIGFwcGxpY2F0aW9uIG9mIGBib2xkZXJgIGJ5IHRoZSBuZXh0IHJ1bGUgaW4gU2FmYXJpIDYuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cblxuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc3R5bGUgaW4gQW5kcm9pZCA0LjMtLlxuICovXG5cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGJhY2tncm91bmQgYW5kIGNvbG9yIGluIElFIDktLlxuICovXG5cbm1hcmsge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYwO1xuICBjb2xvcjogIzAwMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07XG59XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC0uXG4gKi9cblxuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xufVxuXG4vKipcbiAqIEhpZGUgdGhlIG92ZXJmbG93IGluIElFLlxuICovXG5cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmNvZGUsXG5rYmQsXG5wcmUsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IG1hcmdpbiBpbiBJRSA4LlxuICovXG5cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMWVtIDQwcHg7XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDEgKi9cbiAgaGVpZ2h0OiAwOyAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyAvKiAyICovXG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcbmlucHV0LFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250OiBpbmhlcml0OyAvKiAxICovXG4gIG1hcmdpbjogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvbnQgd2VpZ2h0IHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5cbmJ1dHRvbixcbmlucHV0IHsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b24sXG5zZWxlY3QgeyAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIDEuIFByZXZlbnQgYSBXZWJLaXQgYnVnIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYCBhbmQgYHZpZGVvYFxuICogICAgY29udHJvbHMgaW4gQW5kcm9pZCA0LlxuICogMi4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5odG1sIFt0eXBlPVwiYnV0dG9uXCJdLCAvKiAxICovXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENoYW5nZSB0aGUgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0OyAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFLlxuICovXG5cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAtLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLS5cbiAqL1xuXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblxuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBhbmQgY2FuY2VsIGJ1dHRvbnMgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHRleHQgc3R5bGUgb2YgcGxhY2Vob2xkZXJzIGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuXG46Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgb3BhY2l0eTogMC41NDtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG5cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMSAqL1xuICBmb250OiBpbmhlcml0OyAvKiAyICovXG59XG4iLCJAaW1wb3J0IHVybChcImh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1BbnRvblwiKTtcbkBpbXBvcnQgdXJsKFwiaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PVdvcmsrU2Fuczo0MDBcIik7XG4uZmxleC1ib3RoLWFsaWduIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cblxuLmZsZXgtcm93IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgZmxleC13cmFwOiB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7IH1cblxuLnZlcnRpY2FsLWFsaWduLCAubWFpbi1zZWN0aW9uIC5jaXJjbGUsIC5ob21lIC5hcnJvdywgYm9keS5wcm9qZWN0cyBzZWN0aW9uLm1haW4tc2VjdGlvbiAuZGV0YWlscyB1bCBsaTpiZWZvcmUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7IH1cblxuLmhvcml6b250YWwtYWxpZ24sIC5zY3JvbGwtc2VjdGlvbi5jb250YWN0IC5tZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbGVmdDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7IH1cblxuLmFsaWduLWJvdGgsIG5hdiB1bCBsaTpiZWZvcmUsIGJvZHkuYWJvdXQgLmludHJvIC5jaXJjbGUgdmlkZW8sIGJvZHkucHJvamVjdHMgc2VjdGlvbi5tYWluLXNlY3Rpb24gLmltZy1pbnRybyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7IH1cblxuKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTsgfVxuXG5odG1sIHtcbiAgZm9udC1zaXplOiA2Mi41JTsgfVxuXG5ib2R5IHtcbiAgZm9udDogMzAwIDE2cHggXCJXb3JrIFNhbnNcIiwgc2Fucy1zZXJpZjsgfVxuXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1IHtcbiAgZm9udC1mYW1pbHk6IFwiQW50b25cIiwgc2Fucy1zZXJpZjtcbiAgbGV0dGVyLXNwYWNpbmc6IDA7IH1cblxuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG4uYmFyYmEtY29udGFpbmVyIHtcbiAgd2lkdGg6IDEwMHZ3O1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG5cbi8qISBub3JtYWxpemUuY3NzIHY0LjEuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBkZWZhdWx0IGZvbnQgZmFtaWx5IGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBJRSBhbmQgaU9TLlxuICovXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gIC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuYm9keSB7XG4gIG1hcmdpbjogMDsgfVxuXG4vKiBIVE1MNSBkaXNwbGF5IGRlZmluaXRpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFLCBhbmQgRmlyZWZveC5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG5hcnRpY2xlLFxuYXNpZGUsXG5kZXRhaWxzLFxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbmZvb3RlcixcbmhlYWRlcixcbm1haW4sXG5tZW51LFxubmF2LFxuc2VjdGlvbixcbnN1bW1hcnkge1xuICAvKiAxICovXG4gIGRpc3BsYXk6IGJsb2NrO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAtbW96LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5hdWRpbyxcbmNhbnZhcyxcbnByb2dyZXNzLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBpT1MgNC03LlxuICovXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG50ZW1wbGF0ZSxcbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4vKiBMaW5rc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIGdhcHMgaW4gbGlua3MgdW5kZXJsaW5lIGluIGlPUyA4KyBhbmQgU2FmYXJpIDgrLlxuICovXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0cztcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBvdXRsaW5lIG9uIGZvY3VzZWQgbGlua3Mgd2hlbiB0aGV5IGFyZSBhbHNvIGFjdGl2ZSBvciBob3ZlcmVkXG4gKiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZS13aWR0aDogMDsgfVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIEZpcmVmb3ggMzktLlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lO1xuICAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUHJldmVudCB0aGUgZHVwbGljYXRlIGFwcGxpY2F0aW9uIG9mIGBib2xkZXJgIGJ5IHRoZSBuZXh0IHJ1bGUgaW4gU2FmYXJpIDYuXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogaW5oZXJpdDsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc3R5bGUgaW4gQW5kcm9pZCA0LjMtLlxuICovXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7IH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGJhY2tncm91bmQgYW5kIGNvbG9yIGluIElFIDktLlxuICovXG5tYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgY29sb3I6ICMwMDA7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuc21hbGwge1xuICBmb250LXNpemU6IDgwJTsgfVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTsgfVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLS5cbiAqL1xuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lOyB9XG5cbi8qKlxuICogSGlkZSB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKi9cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IG1hcmdpbiBpbiBJRSA4LlxuICovXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4OyB9XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAvKiAxICovXG4gIGhlaWdodDogMDtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgLyogMiAqLyB9XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDEgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb250IHdlaWdodCB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDsgfVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQge1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXG4gKiAxLiBQcmV2ZW50IGEgV2ViS2l0IGJ1ZyB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2AgYW5kIGB2aWRlb2BcbiAqICAgIGNvbnRyb2xzIGluIEFuZHJvaWQgNC5cbiAqIDIuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcbmh0bWwgW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7IH1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0OyB9XG5cbi8qKlxuICogQ2hhbmdlIHRoZSBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlO1xuICAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIC8qIDEgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gKi9cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxuICovXG5bdHlwZT1cImNoZWNrYm94XCJdLFxuW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgdGV4dCBzdHlsZSBvZiBwbGFjZWhvbGRlcnMgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG46Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICBjb2xvcjogaW5oZXJpdDtcbiAgb3BhY2l0eTogMC41NDsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMSAqL1xuICBmb250OiBpbmhlcml0O1xuICAvKiAyICovIH1cblxuQGtleWZyYW1lcyBzY2FsZVVwSW4ge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAuOCkgdHJhbnNsYXRlM2QoMCwgMTAlLCAwKTsgfVxuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEpIHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICAgIG9wYWNpdHk6IDE7IH0gfVxuXG5Aa2V5ZnJhbWVzIHNjYWxlRG93bk91dCB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEpIHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICAgIG9wYWNpdHk6IDE7IH1cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjgpIHRyYW5zbGF0ZTNkKDAsIC0xMCUsIDApO1xuICAgIG9wYWNpdHk6IDA7IH0gfVxuXG5Aa2V5ZnJhbWVzIGZhZGVJbiB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwOyB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDE7IH0gfVxuXG5Aa2V5ZnJhbWVzIGZhZGVPdXQge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMTsgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwOyB9IH1cblxuQGtleWZyYW1lcyBmYWRlSW5MZWZ0IHtcbiAgMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMjB2dyk7XG4gICAgb3BhY2l0eTogMDsgfVxuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgb3BhY2l0eTogMTsgfSB9XG5cbkBrZXlmcmFtZXMgZmFkZUluUmlnaHQge1xuICAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwdncpO1xuICAgIG9wYWNpdHk6IDA7IH1cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIG9wYWNpdHk6IDE7IH0gfVxuXG5Aa2V5ZnJhbWVzIGNpcmNsZUluIHtcbiAgMCUge1xuICAgIHdpZHRoOiAxMjB2bWF4O1xuICAgIGhlaWdodDogMTIwdm1heDsgfVxuICAxMDAlIHtcbiAgICB3aWR0aDogNTB2dztcbiAgICBoZWlnaHQ6IDUwdnc7IH0gfVxuXG5Aa2V5ZnJhbWVzIGNpcmNsZU91dCB7XG4gIDAlIHtcbiAgICB3aWR0aDogNTB2dztcbiAgICBoZWlnaHQ6IDUwdnc7IH1cbiAgMTAwJSB7XG4gICAgd2lkdGg6IDEyMHZtYXg7XG4gICAgaGVpZ2h0OiAxMjB2bWF4OyB9IH1cblxuLmZsZXgtYm90aC1hbGlnbiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG5cbi5mbGV4LXJvdyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0OyB9XG5cbi52ZXJ0aWNhbC1hbGlnbiwgLm1haW4tc2VjdGlvbiAuY2lyY2xlLCAuaG9tZSAuYXJyb3csIGJvZHkucHJvamVjdHMgc2VjdGlvbi5tYWluLXNlY3Rpb24gLmRldGFpbHMgdWwgbGk6YmVmb3JlIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpOyB9XG5cbi5ob3Jpem9udGFsLWFsaWduLCAuc2Nyb2xsLXNlY3Rpb24uY29udGFjdCAubWUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpOyB9XG5cbi5hbGlnbi1ib3RoLCBuYXYgdWwgbGk6YmVmb3JlLCBib2R5LmFib3V0IC5pbnRybyAuY2lyY2xlIHZpZGVvLCBib2R5LnByb2plY3RzIHNlY3Rpb24ubWFpbi1zZWN0aW9uIC5pbWctaW50cm8ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpOyB9XG5cbm5hdiB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICBwYWRkaW5nOiAyMHB4O1xuICB6LWluZGV4OiAxOyB9XG4gIG5hdiB1bCB7XG4gICAgbGlzdC1zdHlsZTogbm9uZTsgfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAgICAgbmF2IHVsIHtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiA1cHg7IH0gfVxuICAgIG5hdiB1bCBsaSB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBtYXJnaW46IDAgMTBweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxOyB9XG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgICAgICAgbmF2IHVsIGxpIHtcbiAgICAgICAgICBtYXJnaW46IDAgMi41cHg7XG4gICAgICAgICAgZm9udC1zaXplOiAxNHB4OyB9IH1cbiAgICAgIG5hdiB1bCBsaTpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB3aWR0aDogMzBweDtcbiAgICAgICAgaGVpZ2h0OiAzMHB4O1xuICAgICAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjQ3MThDO1xuICAgICAgICB6LWluZGV4OiAtMTtcbiAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAuMnMgZWFzZS1pbjsgfVxuICAgICAgbmF2IHVsIGxpIGEge1xuICAgICAgICBjb2xvcjogI2ZmZjsgfVxuXG5ib2R5LmhvbWUgbmF2IHVsIGxpOmZpcnN0LW9mLXR5cGU6YmVmb3JlIHtcbiAgb3BhY2l0eTogMTsgfVxuXG5ib2R5LnByb2plY3RzIG5hdiB1bCBsaTpudGgtb2YtdHlwZSgyKTpiZWZvcmUge1xuICBvcGFjaXR5OiAxO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzc0QTY3OyB9XG5cbmJvZHkuYWJvdXQgbmF2IHVsIGxpOm50aC1vZi10eXBlKDMpOmJlZm9yZSB7XG4gIG9wYWNpdHk6IDE7IH1cblxuYm9keS5jb250YWN0IG5hdiB1bCBsaTpudGgtb2YtdHlwZSg0KTpiZWZvcmUge1xuICBvcGFjaXR5OiAxOyB9XG5cbi5tYWluLXNlY3Rpb24ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGhlaWdodDogMTAwdmg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGJhY2tncm91bmQtY29sb3I6ICMzNzRBNjc7XG4gIHRyYW5zaXRpb246IGFsbCBjdWJpYy1iZXppZXIoMSwgMCwgMC41LCAxKSAxcztcbiAgYm9yZGVyOiAyMHB4IHNvbGlkICNmZmY7IH1cbiAgLm1haW4tc2VjdGlvbiAuY29weSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBsZWZ0OiAxMi41dnc7XG4gICAgdG9wOiAxMHZ3O1xuICAgIGhlaWdodDogNTB2dzsgfVxuICAgIC5tYWluLXNlY3Rpb24gLmNvcHkgaDEsXG4gICAgLm1haW4tc2VjdGlvbiAuY29weSBoMiB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtdGFibGU7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBtYXJnaW46IDA7XG4gICAgICBvcGFjaXR5OiAwO1xuICAgICAgY29sb3I6ICNmZmY7XG4gICAgICBmb250LWZhbWlseTogXCJBbnRvblwiLCBzYW5zLXNlcmlmO1xuICAgICAgdGV4dC1zaGFkb3c6IC0xMHB4IDE1cHggMjVweCByZ2JhKDAsIDAsIDAsIDAuMyk7XG4gICAgICBsaW5lLWhlaWdodDogMTtcbiAgICAgIGFuaW1hdGlvbjogZmFkZUluIDAuNXMgY3ViaWMtYmV6aWVyKDEsIDAsIDAuNSwgMSkgZm9yd2FyZHMgMC41czsgfVxuICAgIC5tYWluLXNlY3Rpb24gLmNvcHkgaDEge1xuICAgICAgZm9udC1zaXplOiAxM3Z3OyB9XG4gICAgLm1haW4tc2VjdGlvbiAuY29weSBoMiB7XG4gICAgICBmb250LXNpemU6IDUuMXZ3OyB9XG4gICAgLm1haW4tc2VjdGlvbiAuY29weSBhIHtcbiAgICAgIG1hcmdpbi10b3A6IDMwcHg7XG4gICAgICBkaXNwbGF5OiBibG9jazsgfVxuICAubWFpbi1zZWN0aW9uLmFjdGl2ZSAuY29weSxcbiAgLm1haW4tc2VjdGlvbi5hY3RpdmUgLnRpdGxlcyB7XG4gICAgb3BhY2l0eTogMDtcbiAgICBhbmltYXRpb246IGZhZGVJblJpZ2h0IDAuNXMgY3ViaWMtYmV6aWVyKDEsIDAsIDAuNSwgMSkgZm9yd2FyZHM7IH1cbiAgLm1haW4tc2VjdGlvbi5sYW5kaW5nLWFuaW1hdGlvbiAuY29weSxcbiAgLm1haW4tc2VjdGlvbi5sYW5kaW5nLWFuaW1hdGlvbiAudGl0bGVzIHtcbiAgICBhbmltYXRpb24tZGVsYXk6IDEuNXM7IH1cblxuLnRyYW5zaXRpb24tb3V0IC5jaXJjbGUgLm1lIHtcbiAgYW5pbWF0aW9uOiBmYWRlT3V0IC4ycyBlYXNlLWluIGZvcndhcmRzICFpbXBvcnRhbnQ7IH1cblxuLnRyYW5zaXRpb24tb3V0IHNlY3Rpb246bm90KC5wcm9qZWN0cykgLmNpcmNsZSB7XG4gIGFuaW1hdGlvbjogY2lyY2xlT3V0IDFzIGN1YmljLWJlemllcigxLCAwLCAwLjUsIDEpIGZvcndhcmRzOyB9XG5cbi50cmFuc2l0aW9uLW91dCBzZWN0aW9uLnByb2plY3RzIC5zbGljay1hY3RpdmUgLmNpcmNsZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNFRkQwQ0E7XG4gIGFuaW1hdGlvbjogY2lyY2xlT3V0IDFzIGN1YmljLWJlemllcigxLCAwLCAwLjUsIDEpIGZvcndhcmRzOyB9XG5cbi50cmFuc2l0aW9uLW91dCAubWFpbi1zZWN0aW9uIC5jb3B5LFxuLnRyYW5zaXRpb24tb3V0IC5tYWluLXNlY3Rpb24gLnRpdGxlcyxcbi50cmFuc2l0aW9uLW91dCAubWFpbi1zZWN0aW9uIC5idG4ge1xuICBhbmltYXRpb246IGZhZGVPdXQgMC41cyBjdWJpYy1iZXppZXIoMSwgMCwgMC41LCAxKSBmb3J3YXJkczsgfVxuXG5ib2R5Om5vdCguaG9tZSkgLmNvcHkge1xuICBvcGFjaXR5OiAwO1xuICBhbmltYXRpb246IGZhZGVJblJpZ2h0IDAuNXMgY3ViaWMtYmV6aWVyKDEsIDAsIDAuNSwgMSkgZm9yd2FyZHMgMS41czsgfVxuXG5ib2R5LmhvbWUgLmludHJvIC5jb3B5IHtcbiAgdG9wOiAyMHZ3OyB9XG5cbi5idG4ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBvdXRsaW5lOiBub25lO1xuICBsaW5lLWhlaWdodDogODBweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgbWF4LXdpZHRoOiAyNTBweDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogODBweDtcbiAgbWFyZ2luLXRvcDogMzBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyOiAxcHggc29saWQgIzlkYTZiOTtcbiAgY29sb3I6ICM5ZGE2Yjk7XG4gIHRyYW5zaXRpb246IGNvbG9yIDAuNHMgZWFzZS1pbi1vdXQ7IH1cbiAgLmJ0biBzcGFuIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDA7XG4gICAgaGVpZ2h0OiAwO1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjOWRhNmI5O1xuICAgIHRyYW5zaXRpb246IHdpZHRoIDAuNHMgZWFzZS1pbi1vdXQsIGhlaWdodCAwLjRzIGVhc2UtaW4tb3V0O1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgIHotaW5kZXg6IC0xOyB9XG4gIC5idG46aG92ZXIge1xuICAgIGNvbG9yOiB3aGl0ZTsgfVxuICAgIC5idG46aG92ZXIgc3BhbiB7XG4gICAgICB3aWR0aDogMjI1JTtcbiAgICAgIGhlaWdodDogNTYyLjVweDsgfVxuICAuYnRuOmFjdGl2ZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzlkYTZiOTsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdGb250LU5hbWUnO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL2ZvbnQtbmFtZS5lb3RcIik7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvZm9udC1uYW1lLmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi4uL2ZvbnRzL2ZvbnQtbmFtZS53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi4uL2ZvbnRzL2ZvbnQtbmFtZS50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIiksIHVybChcIi4uL2ZvbnRzL2ZvbnQtbmFtZS5zdmcjZm9udC1uYW1lXCIpIGZvcm1hdChcInN2Z1wiKTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsOyB9XG5cbi5ob21lIC5jaXJjbGUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgLmhvbWUgLmNpcmNsZSAubWUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHJpZ2h0OiAwO1xuICAgIGJvdHRvbTogMDtcbiAgICBhbmltYXRpb246IGZhZGVPdXQgLjJzIGVhc2UtaW4gZm9yd2FyZHMgLjVzOyB9XG5cbi5ob21lIC5pbnRybyAuY2lyY2xlIC5tZSB7XG4gIHJpZ2h0OiAtMXB4O1xuICBib3R0b206IC0xcHg7IH1cblxuLmhvbWUgLm1haW4tc2VjdGlvbi5hY3RpdmUgLmNpcmNsZSAubWUge1xuICBvcGFjaXR5OiAwO1xuICBhbmltYXRpb246IGZhZGVJbiAuMnMgZWFzZS1pbiBmb3J3YXJkcyAuNXM7IH1cblxuLmhvbWUgLm1haW4tc2VjdGlvbi5sYW5kaW5nLWFuaW1hdGlvbiAuY2lyY2xlIC5tZSB7XG4gIG9wYWNpdHk6IDA7XG4gIGFuaW1hdGlvbi1kZWxheTogMS41czsgfVxuXG4ubWFpbi1zZWN0aW9uIC5jaXJjbGUge1xuICByaWdodDogLTEyLjV2dztcbiAgd2lkdGg6IDEyMHZtYXg7XG4gIGhlaWdodDogMTIwdm1heDtcbiAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgbWFyZ2luOiBhdXRvO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUZEMENBO1xuICB0cmFuc2l0aW9uOiBhbGwgY3ViaWMtYmV6aWVyKDEsIDAsIDAuNSwgMSkgMXM7IH1cblxuLm1haW4tc2VjdGlvbiA+IC5jaXJjbGUge1xuICBhbmltYXRpb246IGNpcmNsZUluIDFzIGN1YmljLWJlemllcigxLCAwLCAwLjUsIDEpIGZvcndhcmRzIDAuNjY2NjdzOyB9XG5cbi5tYWluLXNlY3Rpb24gLmFjdGl2ZSAuY2lyY2xlIHtcbiAgYW5pbWF0aW9uOiBjaXJjbGVJbiAxcyBjdWJpYy1iZXppZXIoMSwgMCwgMC41LCAxKSBmb3J3YXJkcyAwLjY2NjY3czsgfVxuXG4ubWFpbi1zZWN0aW9uIC5zbGljay1zbGlkZTpub3QoLmFjdGl2ZSkgLmNpcmNsZSB7XG4gIHdpZHRoOiA1MHZ3O1xuICBoZWlnaHQ6IDUwdnc7IH1cblxuOjpzZWxlY3Rpb24ge1xuICBiYWNrZ3JvdW5kOiAjMzMzO1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC1zaGFkb3c6IG5vbmU7IH1cblxuOjotbW96LXNlbGVjdGlvbiB7XG4gIGJhY2tncm91bmQ6ICMzMzM7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LXNoYWRvdzogbm9uZTsgfVxuXG46Oi13ZWJraXQtc2VsZWN0aW9uIHtcbiAgYmFja2dyb3VuZDogIzMzMztcbiAgY29sb3I6ICNmZmY7XG4gIHRleHQtc2hhZG93OiBub25lOyB9XG5cbi5zY3JvbGwtc2VjdGlvbi5jb250YWN0IC5tZSB7XG4gIGJvdHRvbTogLTFweDtcbiAgd2lkdGg6IGNhbGMoMTAwJSArIDVweCk7XG4gIHJpZ2h0OiBhdXRvOyB9XG5cbi5zY3JvbGxpZnktYXJyb3dzIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBib3R0b206IDEwcHg7XG4gIGxlZnQ6IDUwcHg7IH1cbiAgLnNjcm9sbGlmeS1hcnJvd3MgZGl2IHtcbiAgICB3aWR0aDogNXZ3O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4OyB9XG4gICAgLnNjcm9sbGlmeS1hcnJvd3MgZGl2LmFycm93LWRvd24ge1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTsgfVxuICAgIC5zY3JvbGxpZnktYXJyb3dzIGRpdi5kaXNhYmxlZCB7XG4gICAgICBvcGFjaXR5OiAuMztcbiAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lOyB9XG4gICAgLnNjcm9sbGlmeS1hcnJvd3MgZGl2IHN2ZyB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lOyB9XG4gICAgICAuc2Nyb2xsaWZ5LWFycm93cyBkaXYgc3ZnIHBhdGgge1xuICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTsgfVxuXG4ucGFnaW5hdGlvbiB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAxMHB4O1xuICByaWdodDogNDBweDtcbiAgbGlzdC1zdHlsZTogbm9uZTsgfVxuICBAbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgICAucGFnaW5hdGlvbiB7XG4gICAgICB0b3A6IDMwcHg7XG4gICAgICByaWdodDogMzBweDsgfSB9XG4gIC5wYWdpbmF0aW9uIGxpIHtcbiAgICBtYXJnaW46IDIwcHggMDsgfVxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA3NjdweCkge1xuICAgICAgLnBhZ2luYXRpb24gbGkge1xuICAgICAgICBmb250LXNpemU6IDE0cHg7IH0gfVxuICAgIC5wYWdpbmF0aW9uIGxpIGEge1xuICAgICAgY29sb3I6ICNmZmY7XG4gICAgICB0cmFuc2l0aW9uOiBhbGwgLjJzIGVhc2UtaW47IH1cbiAgICAgIC5wYWdpbmF0aW9uIGxpIGEuYWN0aXZlIHtcbiAgICAgICAgY29sb3I6ICM2NDcxOEM7IH1cblxuLmhvbWUgLmNhcm91c2VsIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7IH1cbiAgLmhvbWUgLmNhcm91c2VsIC5zbGlkZSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHdpZHRoOiAxMDB2dztcbiAgICBoZWlnaHQ6IDEwMHZoOyB9XG4gICAgLmhvbWUgLmNhcm91c2VsIC5zbGlkZSAudGl0bGVzID4gKiB7XG4gICAgICBvcGFjaXR5OiAwO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDIwdncpO1xuICAgICAgdHJhbnNpdGlvbjogLjVzOyB9XG4gICAgLmhvbWUgLmNhcm91c2VsIC5zbGlkZS5hbmltYXRlIC50aXRsZXMgPiAqIHtcbiAgICAgIG9wYWNpdHk6IDE7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7IH1cbiAgLmhvbWUgLmNhcm91c2VsIC50aXRsZXMge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAxMi41dnc7XG4gICAgdG9wOiAyNXZ3O1xuICAgIGhlaWdodDogNTB2dztcbiAgICBjb2xvcjogI2ZmZjtcbiAgICB0ZXh0LXNoYWRvdzogLTEwcHggMTVweCAyNXB4IHJnYmEoMCwgMCwgMCwgMC4zKTsgfVxuICAgIC5ob21lIC5jYXJvdXNlbCAudGl0bGVzIGgyLFxuICAgIC5ob21lIC5jYXJvdXNlbCAudGl0bGVzIGg0IHtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxOyB9XG4gICAgLmhvbWUgLmNhcm91c2VsIC50aXRsZXMgaDIge1xuICAgICAgZm9udC1zaXplOiAxMHZ3OyB9XG4gICAgLmhvbWUgLmNhcm91c2VsIC50aXRsZXMgaDQge1xuICAgICAgZm9udC1zaXplOiA1dnc7IH1cbiAgLmhvbWUgLmNhcm91c2VsIC5zbGljay1zbGlkZSB7XG4gICAgb3V0bGluZTogMDsgfVxuXG4uaG9tZSAuYXJyb3cge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiA1dnc7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgei1pbmRleDogMjsgfVxuICAuaG9tZSAuYXJyb3cuYXJyb3ctcHJldiB7XG4gICAgbGVmdDogNXZtaW47XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcbiAgICB0b3A6IGNhbGMoNTAlIC0gMi41dncpOyB9XG4gIC5ob21lIC5hcnJvdy5hcnJvdy1uZXh0IHtcbiAgICByaWdodDogNXZtaW47IH1cbiAgLmhvbWUgLmFycm93IHN2ZyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7IH1cbiAgICAuaG9tZSAuYXJyb3cgc3ZnIHBhdGgge1xuICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7IH1cblxuLmhvbWUgLm1haW4tc2VjdGlvbi5wcm9qZWN0cyAuY2lyY2xlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzY0NzE4QzsgfVxuXG4uaG9tZSAubWFpbi1zZWN0aW9uLnByb2plY3RzIC5kZXZpY2VzIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBoZWlnaHQ6IDEwMCU7IH1cbiAgLmhvbWUgLm1haW4tc2VjdGlvbi5wcm9qZWN0cyAuZGV2aWNlcyBpbWcge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsgfVxuICAuaG9tZSAubWFpbi1zZWN0aW9uLnByb2plY3RzIC5kZXZpY2VzIC5kZXNrdG9wIHtcbiAgICB3aWR0aDogODAlO1xuICAgIHRvcDogMjAlO1xuICAgIGxlZnQ6IDEwJTsgfVxuICAuaG9tZSAubWFpbi1zZWN0aW9uLnByb2plY3RzIC5kZXZpY2VzIC5sYXB0b3Age1xuICAgIHdpZHRoOiA2MCU7XG4gICAgbGVmdDogLTEwJTtcbiAgICBib3R0b206IDEwJTsgfVxuICAuaG9tZSAubWFpbi1zZWN0aW9uLnByb2plY3RzIC5kZXZpY2VzIC5tb2JpbGUge1xuICAgIHdpZHRoOiAyMCU7XG4gICAgcmlnaHQ6IDA7XG4gICAgYm90dG9tOiAxNSU7IH1cblxuLmhvbWUgLnRyYW5zaXRpb24tb3V0IC5jaXJjbGUgLmRldmljZXMge1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IC4ycyBlYXNlLW91dDtcbiAgb3BhY2l0eTogMDsgfVxuXG5ib2R5LmFib3V0IC5pbnRybyAudmlkZW8tY29udGFpbmVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogNTB2dztcbiAgaGVpZ2h0OiA1MHZ3O1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIG9wYWNpdHk6IDA7XG4gIGFuaW1hdGlvbjogZmFkZUluIDFzIGZvcndhcmRzIDEuNXM7XG4gIG1peC1ibGVuZC1tb2RlOiBkYXJrZW47IH1cblxuYm9keS5hYm91dCAuaW50cm8gLmNpcmNsZSB2aWRlbyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDEwMCU7IH1cblxuYm9keS5hYm91dCAudHJhbnNpdGlvbi1vdXQgLmludHJvIC52aWRlby1jb250YWluZXIge1xuICBhbmltYXRpb246IGZhZGVPdXQgMC41cyBmb3J3YXJkczsgfVxuXG5ib2R5LnByb2plY3RzIHNlY3Rpb24ubWFpbi1zZWN0aW9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzY0NzE4QztcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgfVxuICBib2R5LnByb2plY3RzIHNlY3Rpb24ubWFpbi1zZWN0aW9uIC5pbWctaW50cm8ge1xuICAgIHdpZHRoOiA4MyU7XG4gICAgb3BhY2l0eTogMDtcbiAgICBhbmltYXRpb246IGZhZGVJbiAxcyBmb3J3YXJkcyAxLjVzOyB9XG4gIGJvZHkucHJvamVjdHMgc2VjdGlvbi5tYWluLXNlY3Rpb24gLmRldGFpbHMge1xuICAgIGRpc3BsYXk6IGlubGluZS10YWJsZTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgb3BhY2l0eTogMDtcbiAgICBhbmltYXRpb246IGZhZGVJbiAwLjVzIGN1YmljLWJlemllcigxLCAwLCAwLjUsIDEpIGZvcndhcmRzIDAuNXM7IH1cbiAgICBib2R5LnByb2plY3RzIHNlY3Rpb24ubWFpbi1zZWN0aW9uIC5kZXRhaWxzIGgzIHtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIGZvbnQtc2l6ZTogMzhweDtcbiAgICAgIG1hcmdpbjogMTBweCAwIDAgMTBweDtcbiAgICAgIGNvbG9yOiAjMjUzMjQ2OyB9XG4gICAgYm9keS5wcm9qZWN0cyBzZWN0aW9uLm1haW4tc2VjdGlvbiAuZGV0YWlscyB1bCB7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgICAgd2lkdGg6IDIwdnc7IH1cbiAgICAgIGJvZHkucHJvamVjdHMgc2VjdGlvbi5tYWluLXNlY3Rpb24gLmRldGFpbHMgdWwgbGkge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIGNvbG9yOiAjMjUzMjQ2O1xuICAgICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICAgIHBhZGRpbmc6IDVweCA1cHggNXB4IDIwcHg7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuICAgICAgICBib2R5LnByb2plY3RzIHNlY3Rpb24ubWFpbi1zZWN0aW9uIC5kZXRhaWxzIHVsIGxpOmJlZm9yZSB7XG4gICAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgIHdpZHRoOiAxMHB4O1xuICAgICAgICAgIGhlaWdodDogMTBweDtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjUzMjQ2O1xuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gICAgICAgICAgbGVmdDogNXB4OyB9XG5cbmJvZHkucHJvamVjdHMgc2VjdGlvbi5wcm9qZWN0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzY0NzE4QztcbiAgYm9yZGVyOiAyMHB4IHNvbGlkICNmZmY7XG4gIGJvcmRlci10b3A6IG5vbmU7XG4gIHBhZGRpbmc6IDV2dzsgfVxuICBib2R5LnByb2plY3RzIHNlY3Rpb24ucHJvamVjdCA+IGRpdiB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgIHdpZHRoOiA4MCU7XG4gICAgbWFyZ2luOiBhdXRvOyB9XG4gICAgYm9keS5wcm9qZWN0cyBzZWN0aW9uLnByb2plY3QgPiBkaXYgLmltZyB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICB3aWR0aDogOTUlO1xuICAgICAgei1pbmRleDogMTsgfVxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgICAgIGJvZHkucHJvamVjdHMgc2VjdGlvbi5wcm9qZWN0ID4gZGl2IC5pbWcge1xuICAgICAgICAgIHdpZHRoOiA3MCU7IH0gfVxuICAgICAgYm9keS5wcm9qZWN0cyBzZWN0aW9uLnByb2plY3QgPiBkaXYgLmltZyBpbWcge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7IH1cbiAgICAgIGJvZHkucHJvamVjdHMgc2VjdGlvbi5wcm9qZWN0ID4gZGl2IC5pbWc6bnRoLW9mLXR5cGUoZXZlbikge1xuICAgICAgICBhbGlnbi1zZWxmOiBmbGV4LWVuZDsgfVxuICAgICAgYm9keS5wcm9qZWN0cyBzZWN0aW9uLnByb2plY3QgPiBkaXYgLmltZzphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHdpZHRoOiAxMTAlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgbGVmdDogLTEwJTtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0VGRDBDQTtcbiAgICAgICAgdHJhbnNpdGlvbjogd2lkdGggMC41cyBjdWJpYy1iZXppZXIoMSwgMCwgMC41LCAxKTsgfVxuICAgICAgYm9keS5wcm9qZWN0cyBzZWN0aW9uLnByb2plY3QgPiBkaXYgLmltZzpudGgtb2YtdHlwZShldmVuKTphZnRlciB7XG4gICAgICAgIHJpZ2h0OiAtMTAlO1xuICAgICAgICBsZWZ0OiBhdXRvOyB9XG4gICAgICBib2R5LnByb2plY3RzIHNlY3Rpb24ucHJvamVjdCA+IGRpdiAuaW1nLmluLXZpZXdwb3J0IHtcbiAgICAgICAgdHJhbnNpdGlvbjogbm9uZTsgfVxuICAgICAgICBib2R5LnByb2plY3RzIHNlY3Rpb24ucHJvamVjdCA+IGRpdiAuaW1nLmluLXZpZXdwb3J0OmFmdGVyIHtcbiAgICAgICAgICB3aWR0aDogMTAlOyB9XG5cbmJvZHkucHJvamVjdHMgLnRyYW5zaXRpb24tb3V0IC5tYWluLXNlY3Rpb24gLmltZy1pbnRybyB7XG4gIGFuaW1hdGlvbjogZmFkZU91dCAwLjVzIGZvcndhcmRzOyB9XG5cbi8qIFNsaWRlciAqL1xuLnNsaWNrLXNsaWRlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC13ZWJraXQtdG91Y2gtY2FsbG91dDogbm9uZTtcbiAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcbiAgLWtodG1sLXVzZXItc2VsZWN0OiBub25lO1xuICAtbW96LXVzZXItc2VsZWN0OiBub25lO1xuICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7XG4gIHVzZXItc2VsZWN0OiBub25lO1xuICAtbXMtdG91Y2gtYWN0aW9uOiBwYW4teTtcbiAgdG91Y2gtYWN0aW9uOiBwYW4teTtcbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDsgfVxuXG4uc2xpY2stbGlzdCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDsgfVxuICAuc2xpY2stbGlzdDpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTsgfVxuICAuc2xpY2stbGlzdC5kcmFnZ2luZyB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGN1cnNvcjogaGFuZDsgfVxuXG4uc2xpY2stc2xpZGVyIC5zbGljay10cmFjayxcbi5zbGljay1zbGlkZXIgLnNsaWNrLWxpc3Qge1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XG4gIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XG4gIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7IH1cblxuLnNsaWNrLXRyYWNrIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvOyB9XG4gIC5zbGljay10cmFjazpiZWZvcmUsIC5zbGljay10cmFjazphZnRlciB7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBkaXNwbGF5OiB0YWJsZTsgfVxuICAuc2xpY2stdHJhY2s6YWZ0ZXIge1xuICAgIGNsZWFyOiBib3RoOyB9XG4gIC5zbGljay1sb2FkaW5nIC5zbGljay10cmFjayB7XG4gICAgdmlzaWJpbGl0eTogaGlkZGVuOyB9XG5cbi5zbGljay1zbGlkZSB7XG4gIGZsb2F0OiBsZWZ0O1xuICBoZWlnaHQ6IDEwMCU7XG4gIG1pbi1oZWlnaHQ6IDFweDtcbiAgZGlzcGxheTogbm9uZTsgfVxuICBbZGlyPVwicnRsXCJdIC5zbGljay1zbGlkZSB7XG4gICAgZmxvYXQ6IHJpZ2h0OyB9XG4gIC5zbGljay1zbGlkZSBpbWcge1xuICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gIC5zbGljay1zbGlkZS5zbGljay1sb2FkaW5nIGltZyB7XG4gICAgZGlzcGxheTogbm9uZTsgfVxuICAuc2xpY2stc2xpZGUuZHJhZ2dpbmcgaW1nIHtcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTsgfVxuICAuc2xpY2staW5pdGlhbGl6ZWQgLnNsaWNrLXNsaWRlIHtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuICAuc2xpY2stbG9hZGluZyAuc2xpY2stc2xpZGUge1xuICAgIHZpc2liaWxpdHk6IGhpZGRlbjsgfVxuICAuc2xpY2stdmVydGljYWwgLnNsaWNrLXNsaWRlIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7IH1cblxuLnNsaWNrLWFycm93LnNsaWNrLWhpZGRlbiB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cbiIsIkBrZXlmcmFtZXMgc2NhbGVVcEluIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwLjgpIHRyYW5zbGF0ZTNkKDAsIDEwJSwgMCk7XG4gIH1cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxKSB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG59XG5cbkBrZXlmcmFtZXMgc2NhbGVEb3duT3V0IHtcbiAgMCUge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMSkgdHJhbnNsYXRlM2QoMCwgMCwgMCk7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDAuOCkgdHJhbnNsYXRlM2QoMCwgLTEwJSwgMCk7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxufVxuXG5cbkBrZXlmcmFtZXMgZmFkZUluIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxufVxuXG5Aa2V5ZnJhbWVzIGZhZGVPdXQge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG59XG5cbkBrZXlmcmFtZXMgZmFkZUluTGVmdCB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTIwdncpO1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbn1cblxuQGtleWZyYW1lcyBmYWRlSW5SaWdodCB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjB2dyk7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxufVxuXG5Aa2V5ZnJhbWVzIGNpcmNsZUluIHtcbiAgMCUge1xuICAgIHdpZHRoOiAxMjB2bWF4O1xuICAgIGhlaWdodDogMTIwdm1heDtcbiAgfVxuXG4gIDEwMCUge1xuICAgIHdpZHRoOiA1MHZ3O1xuICAgIGhlaWdodDogNTB2dztcbiAgfVxufVxuXG5cbkBrZXlmcmFtZXMgY2lyY2xlT3V0IHtcbiAgMCUge1xuICAgIHdpZHRoOiA1MHZ3O1xuICAgIGhlaWdodDogNTB2dztcbiAgfVxuXG4gIDEwMCUge1xuICAgIHdpZHRoOiAxMjB2bWF4O1xuICAgIGhlaWdodDogMTIwdm1heDtcbiAgfVxufVxuIiwiLmZsZXgtYm90aC1hbGlnbiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4uZmxleC1yb3cge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgYWxpZ24tY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbn1cblxuLnZlcnRpY2FsLWFsaWduIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xufVxuXG4uaG9yaXpvbnRhbC1hbGlnbiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbGVmdDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG59XG5cbi5hbGlnbi1ib3RoIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgbGVmdDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbn1cbiIsIm5hdiB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICBwYWRkaW5nOiAyMHB4O1xuICB6LWluZGV4OiAxO1xuXG4gIHVsIHtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuXG4gICAgQGluY2x1ZGUgbW9iaWxlIHtcbiAgICAgIHBhZGRpbmctbGVmdDogNXB4O1xuICAgIH1cblxuICAgIGxpIHtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIG1hcmdpbjogMCAxMHB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDE7XG5cbiAgICAgIEBpbmNsdWRlIG1vYmlsZSB7XG4gICAgICAgIG1hcmdpbjogMCAyLjVweDtcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgfVxuXG4gICAgICAmOmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIEBleHRlbmQgLmFsaWduLWJvdGg7XG4gICAgICAgIHdpZHRoOiAzMHB4O1xuICAgICAgICBoZWlnaHQ6IDMwcHg7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRncmF5LWJsdWU7XG4gICAgICAgIHotaW5kZXg6IC0xO1xuICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IC4ycyBlYXNlLWluO1xuICAgICAgfVxuXG4gICAgICBhIHtcbiAgICAgICAgY29sb3I6ICR3aGl0ZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuYm9keSB7XG5cbiAgJi5ob21lIHtcbiAgICBuYXYgdWwgbGkge1xuICAgICAgJjpmaXJzdC1vZi10eXBlIHtcbiAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAmLnByb2plY3RzIHtcbiAgICBuYXYgdWwgbGkge1xuICAgICAgJjpudGgtb2YtdHlwZSgyKSB7XG4gICAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRkYXJrLWdyYXktYmx1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gICYuYWJvdXQge1xuICAgIG5hdiB1bCBsaSB7XG4gICAgICAmOm50aC1vZi10eXBlKDMpIHtcbiAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAmLmNvbnRhY3Qge1xuICAgIG5hdiB1bCBsaSB7XG4gICAgICAmOm50aC1vZi10eXBlKDQpIHtcbiAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuXG5cbiIsIiR0YWJsZXQtd2lkdGg6IDc2OHB4O1xuJGRlc2t0b3Atd2lkdGg6IDEwMjRweDtcblxuQG1peGluIG1vYmlsZSB7XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAjeyR0YWJsZXQtd2lkdGggLSAxcHh9KSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuQG1peGluIHRhYmxldCB7XG4gIEBtZWRpYSAobWluLXdpZHRoOiAjeyR0YWJsZXQtd2lkdGh9KSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuQG1peGluIGRlc2t0b3Age1xuICBAbWVkaWEgKG1pbi13aWR0aDogI3skZGVza3RvcC13aWR0aH0pIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuIiwiLm1haW4tc2VjdGlvbiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgYmFja2dyb3VuZC1jb2xvcjogJGJhc2U7XG4gIHRyYW5zaXRpb246IGFsbCAkZWFzZSAkZHVyYXRpb247XG4gIGJvcmRlcjogMjBweCBzb2xpZCAkd2hpdGU7XG5cbiAgLmNvcHkge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgbGVmdDogMTIuNXZ3O1xuICAgIHRvcDogMTB2dztcbiAgICBoZWlnaHQ6IDUwdnc7XG5cbiAgICBoMSxcbiAgICBoMiB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtdGFibGU7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBtYXJnaW46IDA7XG4gICAgICBvcGFjaXR5OiAwO1xuICAgICAgY29sb3I6ICR3aGl0ZTtcbiAgICAgIGZvbnQtZmFtaWx5OiAkaGVhZGVyLWZvbnQ7XG4gICAgICBAaW5jbHVkZSB0ZXh0U2hhZG93KCRibGFjaywgLjMpO1xuICAgICAgbGluZS1oZWlnaHQ6IDE7XG4gICAgICBhbmltYXRpb246IGZhZGVJbiAkZHVyYXRpb24vMiAkZWFzZSBmb3J3YXJkcyAkZHVyYXRpb24vMjtcbiAgICB9XG5cbiAgICBoMSB7XG4gICAgICBmb250LXNpemU6IDEzdnc7XG4gICAgfVxuXG4gICAgaDIge1xuICAgICAgZm9udC1zaXplOiA1LjF2dztcbiAgICB9XG5cbiAgICBhIHtcbiAgICAgIG1hcmdpbi10b3A6IDMwcHg7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG4gIH1cblxuICAmLmFjdGl2ZSB7XG5cbiAgICAuY29weSxcbiAgICAudGl0bGVzIHtcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgICBhbmltYXRpb246IGZhZGVJblJpZ2h0ICRkdXJhdGlvbi8yICRlYXNlIGZvcndhcmRzO1xuICAgIH1cbiAgfVxuXG4gICYubGFuZGluZy1hbmltYXRpb24ge1xuICAgIC5jb3B5LFxuICAgIC50aXRsZXMge1xuICAgICAgYW5pbWF0aW9uLWRlbGF5OiAkZHVyYXRpb24gKiAxLjU7XG4gICAgfVxuICB9XG59XG5cbi50cmFuc2l0aW9uLW91dCB7XG5cbiAgLmNpcmNsZSAubWUge1xuICAgIGFuaW1hdGlvbjogZmFkZU91dCAuMnMgZWFzZS1pbiBmb3J3YXJkcyAhaW1wb3J0YW50O1xuICB9XG5cbiAgc2VjdGlvbjpub3QoLnByb2plY3RzKSB7XG4gICAgLmNpcmNsZSB7XG4gICAgICBhbmltYXRpb246IGNpcmNsZU91dCAkZHVyYXRpb24gJGVhc2UgZm9yd2FyZHM7XG4gICAgfVxuICB9XG5cbiAgc2VjdGlvbi5wcm9qZWN0cyB7XG5cbiAgICAuc2xpY2stYWN0aXZlIHtcbiAgICAgIC5jaXJjbGUge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkcGluaztcbiAgICAgICAgYW5pbWF0aW9uOiBjaXJjbGVPdXQgJGR1cmF0aW9uICRlYXNlIGZvcndhcmRzO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC5tYWluLXNlY3Rpb24ge1xuICAgIC5jb3B5LFxuICAgIC50aXRsZXMsXG4gICAgLmJ0biB7XG4gICAgICBhbmltYXRpb246IGZhZGVPdXQgJGR1cmF0aW9uLzIgJGVhc2UgZm9yd2FyZHM7XG4gICAgfVxuICB9XG59XG5cbmJvZHk6bm90KC5ob21lKSB7XG4gIC5jb3B5e1xuICAgIG9wYWNpdHk6IDA7XG4gICAgYW5pbWF0aW9uOiBmYWRlSW5SaWdodCAkZHVyYXRpb24vMiAkZWFzZSBmb3J3YXJkcyAkZHVyYXRpb24qMS41O1xuICB9XG59XG5cbmJvZHkuaG9tZSB7XG4gIC5pbnRybyB7XG4gICAgLmNvcHkge1xuICAgICAgdG9wOiAyMHZ3O1xuICAgIH1cbiAgfVxufVxuIiwiQG1peGluIHRleHRTaGFkb3coJGNvbG9yLCAkb3BhY2l0eSkge1xuICB0ZXh0LXNoYWRvdzogLTEwcHggMTVweCAyNXB4IHJnYmEoJGNvbG9yLCAkb3BhY2l0eSk7XG59XG4iLCIkYnRuLXdpZHRoOiAyNTBweCAhZGVmYXVsdDtcbiRidG4taGVpZ2h0OiA4MHB4ICFkZWZhdWx0O1xuXG5AbWl4aW4gYnV0dG9uKCRidG4tY29sb3IpIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgb3V0bGluZTogbm9uZTtcbiAgbGluZS1oZWlnaHQ6ICRidG4taGVpZ2h0O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBtYXgtd2lkdGg6ICRidG4td2lkdGg7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6ICRidG4taGVpZ2h0O1xuICBtYXJnaW4tdG9wOiAzMHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IDFweCBzb2xpZCAkYnRuLWNvbG9yO1xuICBjb2xvcjogJGJ0bi1jb2xvcjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC40cyBlYXNlLWluLW91dDtcblxuICBzcGFuIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDA7XG4gICAgaGVpZ2h0OiAwO1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYnRuLWNvbG9yO1xuICAgIHRyYW5zaXRpb246IHdpZHRoIDAuNHMgZWFzZS1pbi1vdXQsIGhlaWdodCAwLjRzIGVhc2UtaW4tb3V0O1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgIHotaW5kZXg6IC0xO1xuICB9XG5cbiAgJjpob3ZlciB7XG4gICAgY29sb3I6IGxpZ2h0ZW4oJGJ0bi1jb2xvciwgNzUlKTtcblxuICAgIHNwYW4ge1xuICAgICAgd2lkdGg6IDIyNSU7XG4gICAgICBoZWlnaHQ6IDU2Mi41cHg7XG4gICAgfVxuICB9XG5cbiAgJjphY3RpdmUge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRidG4tY29sb3I7XG4gIH1cbn1cblxuLmJ0biB7XG4gIEBpbmNsdWRlIGJ1dHRvbihsaWdodGVuKCRncmF5LWJsdWUsIDIwJSkpO1xufVxuIiwiLmhvbWUge1xuXG4gIC5jaXJjbGUge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAgIC5tZSB7XG4gICAgICBvcGFjaXR5OiAxO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICByaWdodDogMDtcbiAgICAgIGJvdHRvbTogMDtcbiAgICAgIGFuaW1hdGlvbjogZmFkZU91dCAuMnMgZWFzZS1pbiBmb3J3YXJkcyAuNXM7XG4gICAgfVxuICB9XG5cbiAgLmludHJvIHtcbiAgICAuY2lyY2xlIHtcbiAgICAgIC5tZSB7XG4gICAgICAgIHJpZ2h0OiAtMXB4O1xuICAgICAgICBib3R0b206IC0xcHg7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLm1haW4tc2VjdGlvbiB7XG5cbiAgICAgICYuYWN0aXZlIHtcblxuICAgICAgICAuY2lyY2xlIHtcblxuICAgICAgICAgIC5tZSB7XG4gICAgICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICAgICAgYW5pbWF0aW9uOiBmYWRlSW4gLjJzIGVhc2UtaW4gZm9yd2FyZHMgLjVzO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgJi5sYW5kaW5nLWFuaW1hdGlvbiB7XG5cbiAgICAgIC5jaXJjbGUge1xuXG4gICAgICAgIC5tZSB7XG4gICAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgICBhbmltYXRpb24tZGVsYXk6IDEuNXM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLm1haW4tc2VjdGlvbiB7XG5cbiAgLmNpcmNsZSB7XG4gICAgQGV4dGVuZCAudmVydGljYWwtYWxpZ247XG4gICAgcmlnaHQ6IC0xMi41dnc7XG4gICAgd2lkdGg6IDEyMHZtYXg7XG4gICAgaGVpZ2h0OiAxMjB2bWF4O1xuICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRwaW5rO1xuICAgIHRyYW5zaXRpb246IGFsbCAkZWFzZSAkZHVyYXRpb247XG4gIH1cblxuICA+IC5jaXJjbGUge1xuICAgIGFuaW1hdGlvbjogY2lyY2xlSW4gJGR1cmF0aW9uICRlYXNlIGZvcndhcmRzICRkdXJhdGlvbi8xLjU7XG4gIH1cblxuICAuYWN0aXZlIHtcbiAgICAuY2lyY2xlIHtcbiAgICAgIGFuaW1hdGlvbjogY2lyY2xlSW4gJGR1cmF0aW9uICRlYXNlIGZvcndhcmRzICRkdXJhdGlvbi8xLjU7XG4gICAgfVxuICB9XG5cbiAgLnNsaWNrLXNsaWRlOm5vdCguYWN0aXZlKSB7XG4gICAgLmNpcmNsZSB7XG4gICAgICB3aWR0aDogNTB2dztcbiAgICAgIGhlaWdodDogNTB2dztcbiAgICB9XG4gIH1cbn1cbiIsIjo6c2VsZWN0aW9ue1xuICBiYWNrZ3JvdW5kOiAjMzMzO1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC1zaGFkb3c6IG5vbmU7XG59XG46Oi1tb3otc2VsZWN0aW9ue1xuICBiYWNrZ3JvdW5kOiAjMzMzO1xuY29sb3I6ICNmZmY7XG50ZXh0LXNoYWRvdzogbm9uZTtcbn1cbjo6LXdlYmtpdC1zZWxlY3Rpb257XG4gIGJhY2tncm91bmQ6ICMzMzM7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LXNoYWRvdzogbm9uZTtcbn1cbiIsIi5zY3JvbGwtc2VjdGlvbiB7XG4gICYuY29udGFjdCB7XG4gICAgLm1lIHtcbiAgICAgIGJvdHRvbTogLTFweDtcbiAgICAgIHdpZHRoOiBjYWxjKDEwMCUgKyA1cHgpO1xuICAgICAgcmlnaHQ6IGF1dG87XG4gICAgICBAZXh0ZW5kIC5ob3Jpem9udGFsLWFsaWduO1xuICAgIH1cbiAgfVxufVxuXG4uc2Nyb2xsaWZ5LWFycm93cyB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgYm90dG9tOiAxMHB4O1xuICBsZWZ0OiA1MHB4O1xuXG4gIGRpdiB7XG4gICAgd2lkdGg6IDV2dztcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcblxuICAgICYuYXJyb3ctZG93biB7XG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xuICAgIH1cblxuICAgICYuZGlzYWJsZWQge1xuICAgICAgb3BhY2l0eTogLjM7XG4gICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICB9XG5cbiAgICBzdmcge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcblxuICAgICAgcGF0aCB7XG4gICAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4ucGFnaW5hdGlvbiB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAxMHB4O1xuICByaWdodDogNDBweDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcblxuICBAaW5jbHVkZSBtb2JpbGUge1xuICAgIHRvcDogMzBweDtcbiAgICByaWdodDogMzBweDtcbiAgfVxuXG4gIGxpIHtcbiAgICBtYXJnaW46IDIwcHggMDtcblxuICAgIEBpbmNsdWRlIG1vYmlsZSB7XG4gICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgfVxuXG4gICAgYSB7XG4gICAgICBjb2xvcjogJHdoaXRlO1xuICAgICAgdHJhbnNpdGlvbjogYWxsIC4ycyBlYXNlLWluO1xuXG4gICAgICAmLmFjdGl2ZSB7XG4gICAgICAgIGNvbG9yOiAkZ3JheS1ibHVlO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiLmhvbWUge1xuICAuY2Fyb3VzZWwge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgbGVmdDogMDtcbiAgICB0b3A6IDA7XG5cbiAgICAuc2xpZGUge1xuICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgICB3aWR0aDogMTAwdnc7XG4gICAgICBoZWlnaHQ6IDEwMHZoO1xuXG4gICAgICAudGl0bGVzID4gKiB7XG4gICAgICAgIG9wYWNpdHk6IDA7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyMHZ3KTtcbiAgICAgICAgdHJhbnNpdGlvbjogLjVzO1xuICAgICAgfVxuXG4gICAgICAmLmFuaW1hdGUge1xuXG4gICAgICAgIC50aXRsZXMgPiAqIHtcbiAgICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC50aXRsZXMge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgbGVmdDogMTIuNXZ3O1xuICAgICAgdG9wOiAyNXZ3O1xuICAgICAgaGVpZ2h0OiA1MHZ3O1xuICAgICAgY29sb3I6ICR3aGl0ZTtcbiAgICAgIEBpbmNsdWRlIHRleHRTaGFkb3coJGJsYWNrLCAuMyk7XG5cbiAgICAgIGgyLFxuICAgICAgaDQge1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgICAgfVxuXG4gICAgICBoMiB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTB2dztcbiAgICAgIH1cblxuICAgICAgaDQge1xuICAgICAgICBmb250LXNpemU6IDV2dztcbiAgICAgIH1cblxuICAgICAgLy8uYnRuIHtcbiAgICAgIC8vICBAaW5jbHVkZSBidXR0b24oJGdyYXktYmx1ZSk7XG4gICAgICAvL31cbiAgICB9XG5cbiAgICAuc2xpY2stc2xpZGUge1xuICAgICAgb3V0bGluZTogMDtcbiAgICB9XG4gIH1cblxuICAuYXJyb3cge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB3aWR0aDogNXZ3O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBAZXh0ZW5kIC52ZXJ0aWNhbC1hbGlnbjtcbiAgICB6LWluZGV4OiAyO1xuXG4gICAgJi5hcnJvdy1wcmV2IHtcbiAgICAgIGxlZnQ6IDV2bWluO1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcbiAgICAgIHRvcDogY2FsYyg1MCUgLSAyLjV2dyk7XG4gICAgfVxuXG4gICAgJi5hcnJvdy1uZXh0IHtcbiAgICAgIHJpZ2h0OiA1dm1pbjtcbiAgICB9XG5cbiAgICBzdmcge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcblxuICAgICAgcGF0aCB7XG4gICAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC5tYWluLXNlY3Rpb24ucHJvamVjdHMge1xuXG4gICAgLmNpcmNsZSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JheS1ibHVlO1xuICAgIH1cblxuICAgIC5kZXZpY2VzIHtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG5cbiAgICAgIGltZyB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIH1cblxuICAgICAgLmRlc2t0b3Age1xuICAgICAgICB3aWR0aDogODAlO1xuICAgICAgICB0b3A6IDIwJTtcbiAgICAgICAgbGVmdDogMTAlO1xuICAgICAgfVxuXG4gICAgICAubGFwdG9wIHtcbiAgICAgICAgd2lkdGg6IDYwJTtcbiAgICAgICAgbGVmdDogLTEwJTtcbiAgICAgICAgYm90dG9tOiAxMCU7XG4gICAgICB9XG5cbiAgICAgIC5tb2JpbGUge1xuICAgICAgICB3aWR0aDogMjAlO1xuICAgICAgICByaWdodDogMDtcbiAgICAgICAgYm90dG9tOiAxNSU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLnRyYW5zaXRpb24tb3V0IHtcblxuICAgIC5jaXJjbGUge1xuICAgICAgLmRldmljZXMge1xuICAgICAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IC4ycyBlYXNlLW91dDtcbiAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsImJvZHkuYWJvdXQge1xuXG4gIC5pbnRybyB7XG5cbiAgICAudmlkZW8tY29udGFpbmVyIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHdpZHRoOiA1MHZ3O1xuICAgICAgaGVpZ2h0OiA1MHZ3O1xuICAgICAgbGVmdDogMDtcbiAgICAgIHRvcDogMDtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgb3BhY2l0eTogMDtcbiAgICAgIGFuaW1hdGlvbjogZmFkZUluICRkdXJhdGlvbiBmb3J3YXJkcyAkZHVyYXRpb24qMS41O1xuICAgICAgbWl4LWJsZW5kLW1vZGU6IGRhcmtlbjtcbiAgICB9XG4gICAgLmNpcmNsZSB7XG5cbiAgICAgIHZpZGVvIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBAZXh0ZW5kIC5hbGlnbi1ib3RoO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAudHJhbnNpdGlvbi1vdXQge1xuICAgIC5pbnRybyB7XG4gICAgICAudmlkZW8tY29udGFpbmVyIHtcbiAgICAgICAgYW5pbWF0aW9uOiBmYWRlT3V0ICRkdXJhdGlvbi8yIGZvcndhcmRzO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiYm9keS5wcm9qZWN0cyB7XG5cbiAgc2VjdGlvbi5tYWluLXNlY3Rpb24ge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRncmF5LWJsdWU7XG4gICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcblxuICAgIC5pbWctaW50cm8ge1xuICAgICAgd2lkdGg6IDgzJTtcbiAgICAgIEBleHRlbmQgLmFsaWduLWJvdGg7XG4gICAgICBvcGFjaXR5OiAwO1xuICAgICAgYW5pbWF0aW9uOiBmYWRlSW4gJGR1cmF0aW9uIGZvcndhcmRzICRkdXJhdGlvbioxLjU7XG4gICAgICAvL21peC1ibGVuZC1tb2RlOiBvdmVybGF5O1xuICAgIH1cblxuICAgIC5kZXRhaWxzIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS10YWJsZTtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgICBhbmltYXRpb246IGZhZGVJbiAkZHVyYXRpb24vMiAkZWFzZSBmb3J3YXJkcyAkZHVyYXRpb24vMjtcblxuICAgICAgaDMge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIGZvbnQtc2l6ZTogMzhweDtcbiAgICAgICAgbWFyZ2luOiAxMHB4IDAgMCAxMHB4O1xuICAgICAgICBjb2xvcjogZGFya2VuKCRkYXJrLWdyYXktYmx1ZSwgMTAlKTtcbiAgICAgIH1cblxuICAgICAgdWwge1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgICAgIHdpZHRoOiAyMHZ3O1xuXG4gICAgICAgIGxpIHtcbiAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgY29sb3I6IGRhcmtlbigkZGFyay1ncmF5LWJsdWUsIDEwJSk7XG4gICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgICAgIHBhZGRpbmc6IDVweCA1cHggNXB4IDIwcHg7XG4gICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXG4gICAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICB3aWR0aDogMTBweDtcbiAgICAgICAgICAgIGhlaWdodDogMTBweDtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IGRhcmtlbigkZGFyay1ncmF5LWJsdWUsIDEwJSk7XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICAgICAgICAgICAgbGVmdDogNXB4O1xuICAgICAgICAgICAgQGV4dGVuZCAudmVydGljYWwtYWxpZ247XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgc2VjdGlvbi5wcm9qZWN0IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JheS1ibHVlO1xuICAgIGJvcmRlcjogMjBweCBzb2xpZCAkd2hpdGU7XG4gICAgYm9yZGVyLXRvcDogbm9uZTtcbiAgICBwYWRkaW5nOiA1dnc7XG5cbiAgICA+IGRpdiB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgICAgd2lkdGg6IDgwJTtcbiAgICAgIG1hcmdpbjogYXV0bztcblxuICAgICAgLmltZyB7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgd2lkdGg6IDk1JTtcbiAgICAgICAgei1pbmRleDogMTtcblxuICAgICAgICBAaW5jbHVkZSB0YWJsZXQge1xuICAgICAgICAgIHdpZHRoOiA3MCU7XG4gICAgICAgIH1cblxuICAgICAgICBpbWcge1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB9XG5cbiAgICAgICAgJjpudGgtb2YtdHlwZShldmVuKSB7XG4gICAgICAgICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XG4gICAgICAgIH1cblxuICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICBjb250ZW50OiAgJyc7XG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgIHdpZHRoOiAxMTAlO1xuICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICB0b3A6IDA7XG4gICAgICAgICAgbGVmdDogLTEwJTtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkcGluaztcbiAgICAgICAgICB0cmFuc2l0aW9uOiB3aWR0aCAkZHVyYXRpb24vMiAkZWFzZTtcbiAgICAgICAgfVxuXG4gICAgICAgICY6bnRoLW9mLXR5cGUoZXZlbil7XG4gICAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICByaWdodDogLTEwJTtcbiAgICAgICAgICAgIGxlZnQ6IGF1dG87XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgJi5pbi12aWV3cG9ydCB7XG4gICAgICAgICAgdHJhbnNpdGlvbjogbm9uZTtcblxuICAgICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgd2lkdGg6IDEwJTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAudHJhbnNpdGlvbi1vdXQge1xuICAgIC5tYWluLXNlY3Rpb24ge1xuICAgICAgLmltZy1pbnRybyB7XG4gICAgICAgIGFuaW1hdGlvbjogZmFkZU91dCAkZHVyYXRpb24vMiBmb3J3YXJkcztcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIi8qIFNsaWRlciAqL1xuXG4uc2xpY2stc2xpZGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLXdlYmtpdC10b3VjaC1jYWxsb3V0OiBub25lO1xuICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lO1xuICAta2h0bWwtdXNlci1zZWxlY3Q6IG5vbmU7XG4gIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XG4gIC1tcy11c2VyLXNlbGVjdDogbm9uZTtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gIC1tcy10b3VjaC1hY3Rpb246IHBhbi15O1xuICB0b3VjaC1hY3Rpb246IHBhbi15O1xuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuLnNsaWNrLWxpc3Qge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG5cbiAgJjpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgfVxuXG4gICYuZHJhZ2dpbmcge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBjdXJzb3I6IGhhbmQ7XG4gIH1cbn1cbi5zbGljay1zbGlkZXIgLnNsaWNrLXRyYWNrLFxuLnNsaWNrLXNsaWRlciAuc2xpY2stbGlzdCB7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbn1cblxuLnNsaWNrLXRyYWNrIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuXG4gICY6YmVmb3JlLFxuICAmOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGRpc3BsYXk6IHRhYmxlO1xuICB9XG5cbiAgJjphZnRlciB7XG4gICAgY2xlYXI6IGJvdGg7XG4gIH1cblxuICAuc2xpY2stbG9hZGluZyAmIHtcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gIH1cbn1cbi5zbGljay1zbGlkZSB7XG4gIGZsb2F0OiBsZWZ0O1xuICBoZWlnaHQ6IDEwMCU7XG4gIG1pbi1oZWlnaHQ6IDFweDtcbiAgW2Rpcj1cInJ0bFwiXSAmIHtcbiAgICBmbG9hdDogcmlnaHQ7XG4gIH1cbiAgaW1nIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuICAmLnNsaWNrLWxvYWRpbmcgaW1nIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG5cbiAgZGlzcGxheTogbm9uZTtcblxuICAmLmRyYWdnaW5nIGltZyB7XG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIH1cblxuICAuc2xpY2staW5pdGlhbGl6ZWQgJiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cblxuICAuc2xpY2stbG9hZGluZyAmIHtcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gIH1cblxuICAuc2xpY2stdmVydGljYWwgJiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICB9XG59XG4uc2xpY2stYXJyb3cuc2xpY2staGlkZGVuIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbiJdfQ== */
