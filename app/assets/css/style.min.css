@import url("https://fonts.googleapis.com/css?family=Anton");@import url("https://fonts.googleapis.com/css?family=Work+Sans:400");*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}html{font-size:62.5%}body{font:300 16px Work Sans,sans-serif}h1,h2,h3,h4,h5{font-family:Anton,sans-serif;letter-spacing:0}a{text-decoration:none}.barba-container{width:100vw;overflow:hidden}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block;box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}@keyframes a{0%{opacity:0}to{opacity:1}}@keyframes b{0%{opacity:1}to{opacity:0}}@keyframes c{0%{transform:translateX(20vw);opacity:0}to{transform:translateX(0);opacity:1}}@keyframes d{0%{width:120vmax;height:120vmax}to{width:50vw;height:50vw}}@keyframes e{0%{width:50vw;height:50vw}to{width:120vmax;height:120vmax}}@keyframes f{0%{width:120vmax;height:120vmax}to{width:80vw;height:80vw}}@keyframes g{0%{width:80vw;height:80vw}to{width:120vmax;height:120vmax}}.flex-both-align{-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}.flex-both-align,.flex-row{display:-ms-flexbox;display:flex}.flex-row{-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-line-pack:center;align-content:center;-ms-flex-align:start;align-items:flex-start}.home .arrow,.main-section .circle,.vertical-align,body.projects section.main-section .details ul li:before{position:relative;top:50%;transform:translateY(-50%)}.horizontal-align,.scroll-section.contact .me{position:relative;left:50%;transform:translateX(-50%)}.align-both,body.about .intro .circle video,body.projects section.main-section .img-intro,nav ul li:before{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%)}nav{position:fixed;top:0;left:0;padding:20px;z-index:1}nav ul{list-style:none}@media (max-width:767px){nav ul{padding-left:5px}}nav ul li{position:relative;display:inline-block;margin:0 10px;line-height:1}@media (max-width:767px){nav ul li{margin:0 2.5px;font-size:14px}}nav ul li:before{content:"";position:absolute;width:30px;height:30px;border-radius:100%;background-color:#64718c;z-index:-1;opacity:0;transition:opacity .2s ease-in}nav ul li a{color:#fff}body.home nav ul li:first-of-type:before{opacity:1}body.projects nav ul li:nth-of-type(2):before{opacity:1;background-color:#374a67}body.about nav ul li:nth-of-type(3):before,body.contact nav ul li:nth-of-type(4):before{opacity:1}.main-section{position:relative;height:100vh;overflow:hidden;background-color:#374a67;transition:all 1s cubic-bezier(1,0,.5,1);border:20px solid #fff}.main-section .copy{position:absolute;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:flex-start;-ms-flex-pack:center;justify-content:center;left:12.5vw;top:20vw}.main-section .copy h1,.main-section .copy h2{display:inline-table;position:relative;margin:0;opacity:0;color:#fff;font-family:Anton,sans-serif;text-shadow:-10px 15px 25px rgba(0,0,0,.3);line-height:1;animation:a .5s cubic-bezier(1,0,.5,1) forwards .5s}.main-section .copy h1{font-size:13vw}.main-section .copy h2{font-size:5.1vw}.main-section .copy a{margin-top:30px;display:block}.main-section.active .copy,.main-section.active .titles{opacity:0;animation:c .5s cubic-bezier(1,0,.5,1) forwards}.main-section.landing-animation .copy,.main-section.landing-animation .titles{animation-delay:1.5s}.transition-out .circle .me{animation:b .2s ease-in forwards!important}.transition-out .main-section .btn,.transition-out .main-section .copy,.transition-out .main-section .titles{animation:b .5s cubic-bezier(1,0,.5,1) forwards}body:not(.home) .copy{opacity:0;animation:c .5s cubic-bezier(1,0,.5,1) forwards 1.5s}body.home .intro .copy{top:30vw}.btn{box-sizing:border-box;outline:none;line-height:80px;position:relative;display:block;overflow:hidden;max-width:250px;width:100%;height:80px;margin-top:30px;text-align:center;text-transform:uppercase;background-color:transparent;border:1px solid #9da6b9;color:#9da6b9;transition:color .4s ease-in-out}@media (max-width:767px){.btn{line-height:60px;height:60px;margin-top:15px;width:150px}}.btn span{position:absolute;display:block;width:0;height:0;border-radius:50%;background-color:#9da6b9;transition:width .4s ease-in-out,height .4s ease-in-out;transform:translate(-50%,-50%);z-index:-1}.btn:hover{color:#fff}.btn:hover span{width:225%;height:562.5px}.btn:active{background-color:#9da6b9}.home .circle{position:relative}.home .circle .me{opacity:1;position:absolute;width:100%;right:0;bottom:0;animation:b .2s ease-in forwards .5s}.home .intro .circle .me{right:-1px;bottom:-1px}.home .main-section.active .circle .me{opacity:0;animation:a .2s ease-in forwards .5s}.home .main-section.landing-animation .circle .me{opacity:0;animation-delay:1.5s}.main-section .circle{width:120vmax;height:120vmax;border-radius:100%;margin:auto;background-color:#efd0ca;transition:all 1s cubic-bezier(1,0,.5,1)}@media (min-width:768px){.main-section .circle{right:-12.5vw}}.main-section>.circle{animation:d 1s cubic-bezier(1,0,.5,1) forwards .66667s}@media (max-width:767px){.main-section>.circle{animation:f 1s cubic-bezier(1,0,.5,1) forwards .66667s}}.main-section .active .circle{animation:d 1s cubic-bezier(1,0,.5,1) forwards .66667s}@media (max-width:767px){.main-section .active .circle{animation:f 1s cubic-bezier(1,0,.5,1) forwards .66667s}}.main-section .slick-slide:not(.active) .circle{width:50vw;height:50vw}@media (max-width:767px){.main-section .slick-slide:not(.active) .circle{width:80vw;height:80vw}}.transition-out section:not(.projects) .circle{animation:e 1s cubic-bezier(1,0,.5,1) forwards}@media (max-width:767px){.transition-out section:not(.projects) .circle{animation:g 1s cubic-bezier(1,0,.5,1) forwards}}.transition-out section.projects .slick-active .circle{background-color:#efd0ca;animation:e 1s cubic-bezier(1,0,.5,1) forwards}@media (max-width:767px){.transition-out section.projects .slick-active .circle{animation:g 1s cubic-bezier(1,0,.5,1) forwards}}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}.scroll-section.contact .me{bottom:-1px;width:calc(100% + 5px);right:auto}.scrollify-arrows{position:fixed;bottom:10px;left:50px}.scrollify-arrows div{width:5vw;cursor:pointer;margin-bottom:20px}.scrollify-arrows div.arrow-down{transform:rotate(180deg)}.scrollify-arrows div.disabled{opacity:.3;pointer-events:none}.scrollify-arrows div svg{width:100%;pointer-events:none}.scrollify-arrows div svg path{pointer-events:none}.pagination{position:fixed;top:10px;right:40px;list-style:none}@media (max-width:767px){.pagination{top:30px;right:30px}}.pagination li{margin:20px 0}@media (max-width:767px){.pagination li{font-size:14px}}.pagination li a{color:#fff;transition:all .2s ease-in}.pagination li a.active{color:#64718c}.home .carousel{position:absolute;width:100%;height:100%;left:0;top:0}.home .carousel .slide{position:relative;width:100vw;height:100vh}.home .carousel .slide .titles>*{opacity:0;transform:translateX(20vw);transition:.5s}.home .carousel .slide.animate .titles>*{opacity:1;transform:translateX(0)}.home .carousel .titles{position:absolute;left:12.5vw;top:20vw;height:50vw;color:#fff;text-shadow:-10px 15px 25px rgba(0,0,0,.3)}.home .carousel .titles h2,.home .carousel .titles h4{margin:0;line-height:1}.home .carousel .titles h2{font-size:10vw}.home .carousel .titles h4{font-size:5vw}.home .carousel .slick-slide{outline:0}.home .arrow{position:absolute;width:5vw;cursor:pointer;z-index:2}.home .arrow.arrow-prev{left:5vmin;transform:rotate(180deg);top:calc(50% - 2.5vw)}.home .arrow.arrow-next{right:5vmin}.home .arrow svg{width:100%}.home .arrow svg,.home .arrow svg path{pointer-events:none}.home .main-section.projects .circle{background-color:#64718c}@media (max-width:767px){.home .main-section.projects .circle{left:5vw;margin:0}}.home .main-section.projects .devices{position:relative;display:-ms-flexbox;display:flex;height:100%}.home .main-section.projects .devices img{position:absolute}.home .main-section.projects .devices .desktop{width:80%;top:20%;left:10%}.home .main-section.projects .devices .laptop{width:60%;left:-10%;bottom:10%}.home .main-section.projects .devices .mobile{width:20%;right:0;bottom:15%}.home .transition-out .circle .devices{transition:opacity .2s ease-out;opacity:0}body.about .intro .video-container{position:absolute;width:50vw;height:50vw;left:0;top:0;border-radius:100%;overflow:hidden;opacity:0;animation:a 1s forwards 1.5s;mix-blend-mode:darken}@media (max-width:767px){body.about .intro .video-container{width:80vw;height:80vw}}body.about .intro .circle video{position:absolute;width:100%}body.about .transition-out .intro .video-container{animation:b .5s forwards}body.projects section.main-section{background-color:#64718c;border-bottom:none}body.projects section.main-section .img-intro{width:83%;opacity:0;animation:a 1s forwards 1.5s}body.projects section.main-section .details{display:inline-table;position:relative;opacity:0;animation:a .5s cubic-bezier(1,0,.5,1) forwards .5s}body.projects section.main-section .details h3{position:relative;font-size:38px;margin:10px 0 0 10px;color:#253246}body.projects section.main-section .details ul{padding-left:0;list-style:none;width:20vw}body.projects section.main-section .details ul li{position:relative;color:#253246;font-size:20px;padding:5px 5px 5px 20px;display:inline-block}body.projects section.main-section .details ul li:before{content:"";position:absolute;width:10px;height:10px;background-color:#253246;border-radius:100%;left:5px}body.projects section.project{background-color:#64718c;border:20px solid #fff;border-top:none;padding:5vw}body.projects section.project>div{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:flex-start;width:80%;margin:auto}body.projects section.project>div .img{position:relative;width:95%;z-index:1}@media (min-width:768px){body.projects section.project>div .img{width:70%}}body.projects section.project>div .img img{width:100%;display:block}body.projects section.project>div .img:nth-of-type(2n){-ms-flex-item-align:end;align-self:flex-end}body.projects section.project>div .img:after{content:"";position:absolute;width:110%;height:100%;top:0;left:-10%;background-color:#efd0ca;transition:width .5s cubic-bezier(1,0,.5,1)}body.projects section.project>div .img:nth-of-type(2n):after{right:-10%;left:auto}body.projects section.project>div .img.in-viewport{transition:none}body.projects section.project>div .img.in-viewport:after{width:10%}body.projects .transition-out .main-section .img-intro{animation:b .5s forwards}.slick-slider{box-sizing:border-box;-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-ms-touch-action:pan-y;touch-action:pan-y;-webkit-tap-highlight-color:transparent}.slick-list,.slick-slider{position:relative;display:block}.slick-list{overflow:hidden;margin:0;padding:0}.slick-list:focus{outline:none}.slick-list.dragging{cursor:pointer;cursor:hand}.slick-slider .slick-list,.slick-slider .slick-track{transform:translateZ(0)}.slick-track{position:relative;left:0;top:0;display:block;margin-left:auto;margin-right:auto}.slick-track:after,.slick-track:before{content:"";display:table}.slick-track:after{clear:both}.slick-loading .slick-track{visibility:hidden}.slick-slide{float:left;height:100%;min-height:1px;display:none}[dir=rtl] .slick-slide{float:right}.slick-slide img{display:block}.slick-slide.slick-loading img{display:none}.slick-slide.dragging img{pointer-events:none}.slick-initialized .slick-slide{display:block}.slick-loading .slick-slide{visibility:hidden}.slick-vertical .slick-slide{display:block;height:auto;border:1px solid transparent}.slick-arrow.slick-hidden{display:none}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
